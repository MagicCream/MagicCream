Created by PLY version 3.3 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> parse_sparql
Rule 1     parse_sparql -> prefix_list query order_by limit offset
Rule 2     prefix_list -> prefix prefix_list
Rule 3     prefix_list -> empty
Rule 4     empty -> <empty>
Rule 5     prefix -> PREFIX uri
Rule 6     uri -> ID COLON ID
Rule 7     uri -> ID COLON URI
Rule 8     uri -> URI
Rule 9     order_by -> ORDER BY var_order_list desc_var
Rule 10    order_by -> empty
Rule 11    var_order_list -> empty
Rule 12    var_order_list -> var_order_list desc_var
Rule 13    desc_var -> DESC LPAR VARIABLE RPAR
Rule 14    desc_var -> VARIABLE
Rule 15    desc_var -> ASC LPAR VARIABLE RPAR
Rule 16    desc_var -> unary_func LPAR desc_var RPAR
Rule 17    limit -> LIMIT NUMBER
Rule 18    limit -> empty
Rule 19    offset -> OFFSET NUMBER
Rule 20    offset -> empty
Rule 21    query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY
Rule 22    query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY
Rule 23    distinct -> DISTINCT
Rule 24    distinct -> empty
Rule 25    group_graph_pattern -> union_block
Rule 26    union_block -> pjoin_block rest_union_block POINT pjoin_block
Rule 27    union_block -> pjoin_block rest_union_block pjoin_block
Rule 28    union_block -> pjoin_block rest_union_block
Rule 29    pjoin_block -> LKEY join_block RKEY
Rule 30    pjoin_block -> join_block
Rule 31    pjoin_block -> empty
Rule 32    rest_union_block -> empty
Rule 33    rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block
Rule 34    join_block -> LKEY union_block RKEY rest_join_block
Rule 35    join_block -> bgp rest_join_block
Rule 36    rest_join_block -> empty
Rule 37    rest_join_block -> POINT bgp rest_join_block
Rule 38    rest_join_block -> bgp rest_join_block
Rule 39    bgp -> LKEY bgp UNION bgp rest_union_block RKEY
Rule 40    bgp -> bgp UNION bgp rest_union_block
Rule 41    bgp -> triple
Rule 42    bgp -> FILTER LPAR expression RPAR
Rule 43    bgp -> FILTER express_rel
Rule 44    bgp -> OPTIONAL LKEY group_graph_pattern RKEY
Rule 45    bgp -> LKEY join_block RKEY
Rule 46    expression -> express_rel LOGOP expression
Rule 47    expression -> express_rel
Rule 48    expression -> LPAR expression RPAR
Rule 49    express_rel -> express_arg RELOP express_rel
Rule 50    express_rel -> express_arg
Rule 51    express_rel -> LPAR express_rel RPAR
Rule 52    express_rel -> NEG LPAR expression RPAR
Rule 53    express_rel -> NEG express_rel
Rule 54    express_arg -> uri
Rule 55    express_arg -> VARIABLE
Rule 56    express_arg -> CONSTANT
Rule 57    express_arg -> NUMBER
Rule 58    express_arg -> NUMBER POINT NUMBER
Rule 59    express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag
Rule 60    regex_flag -> RPAR
Rule 61    regex_flag -> COMA pattern_arg RPAR
Rule 62    pattern_arg -> CONSTANT
Rule 63    express_arg -> binary_func LPAR express_arg COMA express_arg RPAR
Rule 64    express_arg -> unary_func LPAR express_arg RPAR
Rule 65    express_arg -> UNARYOP express_arg
Rule 66    express_arg -> express_arg ARITOP express_arg
Rule 67    express_arg -> LPAR express_arg RPAR
Rule 68    express_arg -> express_arg RELOP express_arg
Rule 69    ARITOP -> PLUS
Rule 70    ARITOP -> MINUS
Rule 71    ARITOP -> TIMES
Rule 72    ARITOP -> DIV
Rule 73    UNARYOP -> PLUS
Rule 74    UNARYOP -> MINUS
Rule 75    LOGOP -> AND
Rule 76    LOGOP -> OR
Rule 77    RELOP -> EQUALS
Rule 78    RELOP -> LESS
Rule 79    RELOP -> LESSEQ
Rule 80    RELOP -> GREATER
Rule 81    RELOP -> GREATEREQ
Rule 82    RELOP -> NEQUALS
Rule 83    binary_func -> REGEX
Rule 84    binary_func -> SAMETERM
Rule 85    binary_func -> LANGMATCHES
Rule 86    binary_func -> CONSTANT
Rule 87    binary_func -> CONTAINS
Rule 88    unary_func -> BOUND
Rule 89    unary_func -> ISIRI
Rule 90    unary_func -> ISURI
Rule 91    unary_func -> ISBLANK
Rule 92    unary_func -> ISLITERAL
Rule 93    unary_func -> LANG
Rule 94    unary_func -> DATATYPE
Rule 95    unary_func -> STR
Rule 96    unary_func -> UPPERCASE
Rule 97    unary_func -> DOUBLE
Rule 98    unary_func -> INTEGER
Rule 99    unary_func -> DECIMAL
Rule 100   unary_func -> FLOAT
Rule 101   unary_func -> STRING
Rule 102   unary_func -> BOOLEAN
Rule 103   unary_func -> DATETIME
Rule 104   unary_func -> NONPOSINT
Rule 105   unary_func -> NEGATIVEINT
Rule 106   unary_func -> LONG
Rule 107   unary_func -> INT
Rule 108   unary_func -> SHORT
Rule 109   unary_func -> BYTE
Rule 110   unary_func -> NONNEGINT
Rule 111   unary_func -> UNSIGNEDLONG
Rule 112   unary_func -> UNSIGNEDINT
Rule 113   unary_func -> UNSIGNEDSHORT
Rule 114   unary_func -> UNSIGNEDBYTE
Rule 115   unary_func -> POSITIVEINT
Rule 116   unary_func -> ID COLON ID
Rule 117   unary_func -> uri
Rule 118   unary_func -> UCASE
Rule 119   unary_func -> LCASE
Rule 120   var_list -> var_list VARIABLE
Rule 121   var_list -> VARIABLE
Rule 122   triple -> subject predicate object
Rule 123   predicate -> ID
Rule 124   predicate -> uri
Rule 125   predicate -> VARIABLE
Rule 126   subject -> uri
Rule 127   subject -> VARIABLE
Rule 128   object -> uri
Rule 129   object -> VARIABLE
Rule 130   object -> CONSTANT

Terminals, with rules where they appear

ALL                  : 22
AND                  : 75
ASC                  : 15
BOOLEAN              : 102
BOUND                : 88
BY                   : 9
BYTE                 : 109
COLON                : 6 7 116
COMA                 : 59 61 63
CONSTANT             : 56 62 86 130
CONTAINS             : 87
DATATYPE             : 94
DATETIME             : 103
DECIMAL              : 99
DESC                 : 13
DISTINCT             : 23
DIV                  : 72
DOUBLE               : 97
EQUALS               : 77
FILTER               : 42 43
FLOAT                : 100
GREATER              : 80
GREATEREQ            : 81
ID                   : 6 6 7 116 116 123
INT                  : 107
INTEGER              : 98
ISBLANK              : 91
ISIRI                : 89
ISLITERAL            : 92
ISURI                : 90
LANG                 : 93
LANGMATCHES          : 85
LCASE                : 119
LESS                 : 78
LESSEQ               : 79
LIMIT                : 17
LKEY                 : 21 22 29 33 34 39 44 45
LONG                 : 106
LPAR                 : 13 15 16 42 48 51 52 59 63 64 67
MINUS                : 70 74
NEG                  : 52 53
NEGATIVEINT          : 105
NEQUALS              : 82
NONNEGINT            : 110
NONPOSINT            : 104
NUMBER               : 17 19 57 58 58
OFFSET               : 19
OPTIONAL             : 44
OR                   : 76
ORDER                : 9
PLUS                 : 69 73
POINT                : 26 37 58
POSITIVEINT          : 115
PREFIX               : 5
REGEX                : 59 83
RKEY                 : 21 22 29 33 34 39 44 45
RPAR                 : 13 15 16 42 48 51 52 60 61 63 64 67
SAMETERM             : 84
SELECT               : 21 22
SHORT                : 108
STR                  : 95
STRING               : 101
TIMES                : 71
UCASE                : 118
UNION                : 33 39 40
UNSIGNEDBYTE         : 114
UNSIGNEDINT          : 112
UNSIGNEDLONG         : 111
UNSIGNEDSHORT        : 113
UPPERCASE            : 96
URI                  : 7 8
VARIABLE             : 13 14 15 55 120 121 125 127 129
WHERE                : 21 22
error                : 

Nonterminals, with rules where they appear

ARITOP               : 66
LOGOP                : 46
RELOP                : 49 68
UNARYOP              : 65
bgp                  : 35 37 38 39 39 40 40
binary_func          : 63
desc_var             : 9 12 16
distinct             : 21 22
empty                : 3 10 11 18 20 24 31 32 36
express_arg          : 49 50 59 63 63 64 65 66 66 67 68 68
express_rel          : 43 46 47 49 51 53
expression           : 42 46 48 52
group_graph_pattern  : 21 22 44
join_block           : 29 30 33 45
limit                : 1
object               : 122
offset               : 1
order_by             : 1
parse_sparql         : 0
pattern_arg          : 59 61
pjoin_block          : 26 26 27 27 28
predicate            : 122
prefix               : 2
prefix_list          : 1 2
query                : 1
regex_flag           : 59
rest_join_block      : 34 35 37 38
rest_union_block     : 26 27 28 33 33 39 40
subject              : 122
triple               : 41
unary_func           : 16 64
union_block          : 25 34
uri                  : 5 54 117 124 126 128
var_list             : 21 120
var_order_list       : 9 12

Parsing method: LALR

state 0

    (0) S' -> . parse_sparql
    (1) parse_sparql -> . prefix_list query order_by limit offset
    (2) prefix_list -> . prefix prefix_list
    (3) prefix_list -> . empty
    (5) prefix -> . PREFIX uri
    (4) empty -> .

    PREFIX          shift and go to state 1
    SELECT          reduce using rule 4 (empty -> .)

    parse_sparql                   shift and go to state 2
    prefix                         shift and go to state 3
    prefix_list                    shift and go to state 4
    empty                          shift and go to state 5

state 1

    (5) prefix -> PREFIX . uri
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    ID              shift and go to state 8
    URI             shift and go to state 7

    uri                            shift and go to state 6

state 2

    (0) S' -> parse_sparql .



state 3

    (2) prefix_list -> prefix . prefix_list
    (2) prefix_list -> . prefix prefix_list
    (3) prefix_list -> . empty
    (5) prefix -> . PREFIX uri
    (4) empty -> .

    PREFIX          shift and go to state 1
    SELECT          reduce using rule 4 (empty -> .)

    prefix                         shift and go to state 3
    prefix_list                    shift and go to state 9
    empty                          shift and go to state 5

state 4

    (1) parse_sparql -> prefix_list . query order_by limit offset
    (21) query -> . SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY
    (22) query -> . SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY

    SELECT          shift and go to state 11

    query                          shift and go to state 10

state 5

    (3) prefix_list -> empty .

    SELECT          reduce using rule 3 (prefix_list -> empty .)


state 6

    (5) prefix -> PREFIX uri .

    PREFIX          reduce using rule 5 (prefix -> PREFIX uri .)
    SELECT          reduce using rule 5 (prefix -> PREFIX uri .)


state 7

    (8) uri -> URI .

    COMA            reduce using rule 8 (uri -> URI .)
    PLUS            reduce using rule 8 (uri -> URI .)
    MINUS           reduce using rule 8 (uri -> URI .)
    TIMES           reduce using rule 8 (uri -> URI .)
    DIV             reduce using rule 8 (uri -> URI .)
    EQUALS          reduce using rule 8 (uri -> URI .)
    LESS            reduce using rule 8 (uri -> URI .)
    LESSEQ          reduce using rule 8 (uri -> URI .)
    GREATER         reduce using rule 8 (uri -> URI .)
    GREATEREQ       reduce using rule 8 (uri -> URI .)
    NEQUALS         reduce using rule 8 (uri -> URI .)
    LPAR            reduce using rule 8 (uri -> URI .)
    ID              reduce using rule 8 (uri -> URI .)
    VARIABLE        reduce using rule 8 (uri -> URI .)
    URI             reduce using rule 8 (uri -> URI .)
    RPAR            reduce using rule 8 (uri -> URI .)
    AND             reduce using rule 8 (uri -> URI .)
    OR              reduce using rule 8 (uri -> URI .)
    UNION           reduce using rule 8 (uri -> URI .)
    POINT           reduce using rule 8 (uri -> URI .)
    LKEY            reduce using rule 8 (uri -> URI .)
    FILTER          reduce using rule 8 (uri -> URI .)
    OPTIONAL        reduce using rule 8 (uri -> URI .)
    RKEY            reduce using rule 8 (uri -> URI .)
    CONSTANT        reduce using rule 8 (uri -> URI .)
    PREFIX          reduce using rule 8 (uri -> URI .)
    SELECT          reduce using rule 8 (uri -> URI .)


state 8

    (6) uri -> ID . COLON ID
    (7) uri -> ID . COLON URI

    COLON           shift and go to state 12


state 9

    (2) prefix_list -> prefix prefix_list .

    SELECT          reduce using rule 2 (prefix_list -> prefix prefix_list .)


state 10

    (1) parse_sparql -> prefix_list query . order_by limit offset
    (9) order_by -> . ORDER BY var_order_list desc_var
    (10) order_by -> . empty
    (4) empty -> .

    ORDER           shift and go to state 14
    LIMIT           reduce using rule 4 (empty -> .)
    OFFSET          reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)

    order_by                       shift and go to state 13
    empty                          shift and go to state 15

state 11

    (21) query -> SELECT . distinct var_list WHERE LKEY group_graph_pattern RKEY
    (22) query -> SELECT . distinct ALL WHERE LKEY group_graph_pattern RKEY
    (23) distinct -> . DISTINCT
    (24) distinct -> . empty
    (4) empty -> .

    DISTINCT        shift and go to state 17
    ALL             reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)

    distinct                       shift and go to state 16
    empty                          shift and go to state 18

state 12

    (6) uri -> ID COLON . ID
    (7) uri -> ID COLON . URI

    ID              shift and go to state 19
    URI             shift and go to state 20


state 13

    (1) parse_sparql -> prefix_list query order_by . limit offset
    (17) limit -> . LIMIT NUMBER
    (18) limit -> . empty
    (4) empty -> .

    LIMIT           shift and go to state 21
    OFFSET          reduce using rule 4 (empty -> .)
    $end            reduce using rule 4 (empty -> .)

    limit                          shift and go to state 22
    empty                          shift and go to state 23

state 14

    (9) order_by -> ORDER . BY var_order_list desc_var

    BY              shift and go to state 24


state 15

    (10) order_by -> empty .

    LIMIT           reduce using rule 10 (order_by -> empty .)
    OFFSET          reduce using rule 10 (order_by -> empty .)
    $end            reduce using rule 10 (order_by -> empty .)


state 16

    (21) query -> SELECT distinct . var_list WHERE LKEY group_graph_pattern RKEY
    (22) query -> SELECT distinct . ALL WHERE LKEY group_graph_pattern RKEY
    (120) var_list -> . var_list VARIABLE
    (121) var_list -> . VARIABLE

    ALL             shift and go to state 25
    VARIABLE        shift and go to state 26

    var_list                       shift and go to state 27

state 17

    (23) distinct -> DISTINCT .

    ALL             reduce using rule 23 (distinct -> DISTINCT .)
    VARIABLE        reduce using rule 23 (distinct -> DISTINCT .)


state 18

    (24) distinct -> empty .

    ALL             reduce using rule 24 (distinct -> empty .)
    VARIABLE        reduce using rule 24 (distinct -> empty .)


state 19

    (6) uri -> ID COLON ID .

    ID              reduce using rule 6 (uri -> ID COLON ID .)
    VARIABLE        reduce using rule 6 (uri -> ID COLON ID .)
    URI             reduce using rule 6 (uri -> ID COLON ID .)
    CONSTANT        reduce using rule 6 (uri -> ID COLON ID .)
    UNION           reduce using rule 6 (uri -> ID COLON ID .)
    POINT           reduce using rule 6 (uri -> ID COLON ID .)
    LKEY            reduce using rule 6 (uri -> ID COLON ID .)
    FILTER          reduce using rule 6 (uri -> ID COLON ID .)
    OPTIONAL        reduce using rule 6 (uri -> ID COLON ID .)
    RKEY            reduce using rule 6 (uri -> ID COLON ID .)
    PREFIX          reduce using rule 6 (uri -> ID COLON ID .)
    SELECT          reduce using rule 6 (uri -> ID COLON ID .)


state 20

    (7) uri -> ID COLON URI .

    COMA            reduce using rule 7 (uri -> ID COLON URI .)
    PLUS            reduce using rule 7 (uri -> ID COLON URI .)
    MINUS           reduce using rule 7 (uri -> ID COLON URI .)
    TIMES           reduce using rule 7 (uri -> ID COLON URI .)
    DIV             reduce using rule 7 (uri -> ID COLON URI .)
    EQUALS          reduce using rule 7 (uri -> ID COLON URI .)
    LESS            reduce using rule 7 (uri -> ID COLON URI .)
    LESSEQ          reduce using rule 7 (uri -> ID COLON URI .)
    GREATER         reduce using rule 7 (uri -> ID COLON URI .)
    GREATEREQ       reduce using rule 7 (uri -> ID COLON URI .)
    NEQUALS         reduce using rule 7 (uri -> ID COLON URI .)
    LPAR            reduce using rule 7 (uri -> ID COLON URI .)
    ID              reduce using rule 7 (uri -> ID COLON URI .)
    VARIABLE        reduce using rule 7 (uri -> ID COLON URI .)
    URI             reduce using rule 7 (uri -> ID COLON URI .)
    RPAR            reduce using rule 7 (uri -> ID COLON URI .)
    AND             reduce using rule 7 (uri -> ID COLON URI .)
    OR              reduce using rule 7 (uri -> ID COLON URI .)
    UNION           reduce using rule 7 (uri -> ID COLON URI .)
    POINT           reduce using rule 7 (uri -> ID COLON URI .)
    LKEY            reduce using rule 7 (uri -> ID COLON URI .)
    FILTER          reduce using rule 7 (uri -> ID COLON URI .)
    OPTIONAL        reduce using rule 7 (uri -> ID COLON URI .)
    RKEY            reduce using rule 7 (uri -> ID COLON URI .)
    CONSTANT        reduce using rule 7 (uri -> ID COLON URI .)
    PREFIX          reduce using rule 7 (uri -> ID COLON URI .)
    SELECT          reduce using rule 7 (uri -> ID COLON URI .)


state 21

    (17) limit -> LIMIT . NUMBER

    NUMBER          shift and go to state 28


state 22

    (1) parse_sparql -> prefix_list query order_by limit . offset
    (19) offset -> . OFFSET NUMBER
    (20) offset -> . empty
    (4) empty -> .

    OFFSET          shift and go to state 29
    $end            reduce using rule 4 (empty -> .)

    offset                         shift and go to state 30
    empty                          shift and go to state 31

state 23

    (18) limit -> empty .

    OFFSET          reduce using rule 18 (limit -> empty .)
    $end            reduce using rule 18 (limit -> empty .)


state 24

    (9) order_by -> ORDER BY . var_order_list desc_var
    (11) var_order_list -> . empty
    (12) var_order_list -> . var_order_list desc_var
    (4) empty -> .

    DESC            reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)
    ASC             reduce using rule 4 (empty -> .)
    BOUND           reduce using rule 4 (empty -> .)
    ISIRI           reduce using rule 4 (empty -> .)
    ISURI           reduce using rule 4 (empty -> .)
    ISBLANK         reduce using rule 4 (empty -> .)
    ISLITERAL       reduce using rule 4 (empty -> .)
    LANG            reduce using rule 4 (empty -> .)
    DATATYPE        reduce using rule 4 (empty -> .)
    STR             reduce using rule 4 (empty -> .)
    UPPERCASE       reduce using rule 4 (empty -> .)
    DOUBLE          reduce using rule 4 (empty -> .)
    INTEGER         reduce using rule 4 (empty -> .)
    DECIMAL         reduce using rule 4 (empty -> .)
    FLOAT           reduce using rule 4 (empty -> .)
    STRING          reduce using rule 4 (empty -> .)
    BOOLEAN         reduce using rule 4 (empty -> .)
    DATETIME        reduce using rule 4 (empty -> .)
    NONPOSINT       reduce using rule 4 (empty -> .)
    NEGATIVEINT     reduce using rule 4 (empty -> .)
    LONG            reduce using rule 4 (empty -> .)
    INT             reduce using rule 4 (empty -> .)
    SHORT           reduce using rule 4 (empty -> .)
    BYTE            reduce using rule 4 (empty -> .)
    NONNEGINT       reduce using rule 4 (empty -> .)
    UNSIGNEDLONG    reduce using rule 4 (empty -> .)
    UNSIGNEDINT     reduce using rule 4 (empty -> .)
    UNSIGNEDSHORT   reduce using rule 4 (empty -> .)
    UNSIGNEDBYTE    reduce using rule 4 (empty -> .)
    POSITIVEINT     reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)
    UCASE           reduce using rule 4 (empty -> .)
    LCASE           reduce using rule 4 (empty -> .)
    URI             reduce using rule 4 (empty -> .)

    var_order_list                 shift and go to state 32
    empty                          shift and go to state 33

state 25

    (22) query -> SELECT distinct ALL . WHERE LKEY group_graph_pattern RKEY

    WHERE           shift and go to state 34


state 26

    (121) var_list -> VARIABLE .

    WHERE           reduce using rule 121 (var_list -> VARIABLE .)
    VARIABLE        reduce using rule 121 (var_list -> VARIABLE .)


state 27

    (21) query -> SELECT distinct var_list . WHERE LKEY group_graph_pattern RKEY
    (120) var_list -> var_list . VARIABLE

    WHERE           shift and go to state 36
    VARIABLE        shift and go to state 35


state 28

    (17) limit -> LIMIT NUMBER .

    OFFSET          reduce using rule 17 (limit -> LIMIT NUMBER .)
    $end            reduce using rule 17 (limit -> LIMIT NUMBER .)


state 29

    (19) offset -> OFFSET . NUMBER

    NUMBER          shift and go to state 37


state 30

    (1) parse_sparql -> prefix_list query order_by limit offset .

    $end            reduce using rule 1 (parse_sparql -> prefix_list query order_by limit offset .)


state 31

    (20) offset -> empty .

    $end            reduce using rule 20 (offset -> empty .)


state 32

    (9) order_by -> ORDER BY var_order_list . desc_var
    (12) var_order_list -> var_order_list . desc_var
    (13) desc_var -> . DESC LPAR VARIABLE RPAR
    (14) desc_var -> . VARIABLE
    (15) desc_var -> . ASC LPAR VARIABLE RPAR
    (16) desc_var -> . unary_func LPAR desc_var RPAR
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    DESC            shift and go to state 61
    VARIABLE        shift and go to state 57
    ASC             shift and go to state 50
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    ID              shift and go to state 60
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    URI             shift and go to state 7

    unary_func                     shift and go to state 72
    desc_var                       shift and go to state 64
    uri                            shift and go to state 65

state 33

    (11) var_order_list -> empty .

    DESC            reduce using rule 11 (var_order_list -> empty .)
    VARIABLE        reduce using rule 11 (var_order_list -> empty .)
    ASC             reduce using rule 11 (var_order_list -> empty .)
    BOUND           reduce using rule 11 (var_order_list -> empty .)
    ISIRI           reduce using rule 11 (var_order_list -> empty .)
    ISURI           reduce using rule 11 (var_order_list -> empty .)
    ISBLANK         reduce using rule 11 (var_order_list -> empty .)
    ISLITERAL       reduce using rule 11 (var_order_list -> empty .)
    LANG            reduce using rule 11 (var_order_list -> empty .)
    DATATYPE        reduce using rule 11 (var_order_list -> empty .)
    STR             reduce using rule 11 (var_order_list -> empty .)
    UPPERCASE       reduce using rule 11 (var_order_list -> empty .)
    DOUBLE          reduce using rule 11 (var_order_list -> empty .)
    INTEGER         reduce using rule 11 (var_order_list -> empty .)
    DECIMAL         reduce using rule 11 (var_order_list -> empty .)
    FLOAT           reduce using rule 11 (var_order_list -> empty .)
    STRING          reduce using rule 11 (var_order_list -> empty .)
    BOOLEAN         reduce using rule 11 (var_order_list -> empty .)
    DATETIME        reduce using rule 11 (var_order_list -> empty .)
    NONPOSINT       reduce using rule 11 (var_order_list -> empty .)
    NEGATIVEINT     reduce using rule 11 (var_order_list -> empty .)
    LONG            reduce using rule 11 (var_order_list -> empty .)
    INT             reduce using rule 11 (var_order_list -> empty .)
    SHORT           reduce using rule 11 (var_order_list -> empty .)
    BYTE            reduce using rule 11 (var_order_list -> empty .)
    NONNEGINT       reduce using rule 11 (var_order_list -> empty .)
    UNSIGNEDLONG    reduce using rule 11 (var_order_list -> empty .)
    UNSIGNEDINT     reduce using rule 11 (var_order_list -> empty .)
    UNSIGNEDSHORT   reduce using rule 11 (var_order_list -> empty .)
    UNSIGNEDBYTE    reduce using rule 11 (var_order_list -> empty .)
    POSITIVEINT     reduce using rule 11 (var_order_list -> empty .)
    ID              reduce using rule 11 (var_order_list -> empty .)
    UCASE           reduce using rule 11 (var_order_list -> empty .)
    LCASE           reduce using rule 11 (var_order_list -> empty .)
    URI             reduce using rule 11 (var_order_list -> empty .)


state 34

    (22) query -> SELECT distinct ALL WHERE . LKEY group_graph_pattern RKEY

    LKEY            shift and go to state 75


state 35

    (120) var_list -> var_list VARIABLE .

    WHERE           reduce using rule 120 (var_list -> var_list VARIABLE .)
    VARIABLE        reduce using rule 120 (var_list -> var_list VARIABLE .)


state 36

    (21) query -> SELECT distinct var_list WHERE . LKEY group_graph_pattern RKEY

    LKEY            shift and go to state 76


state 37

    (19) offset -> OFFSET NUMBER .

    $end            reduce using rule 19 (offset -> OFFSET NUMBER .)


state 38

    (105) unary_func -> NEGATIVEINT .

    LPAR            reduce using rule 105 (unary_func -> NEGATIVEINT .)


state 39

    (108) unary_func -> SHORT .

    LPAR            reduce using rule 108 (unary_func -> SHORT .)


state 40

    (90) unary_func -> ISURI .

    LPAR            reduce using rule 90 (unary_func -> ISURI .)


state 41

    (93) unary_func -> LANG .

    LPAR            reduce using rule 93 (unary_func -> LANG .)


state 42

    (113) unary_func -> UNSIGNEDSHORT .

    LPAR            reduce using rule 113 (unary_func -> UNSIGNEDSHORT .)


state 43

    (114) unary_func -> UNSIGNEDBYTE .

    LPAR            reduce using rule 114 (unary_func -> UNSIGNEDBYTE .)


state 44

    (94) unary_func -> DATATYPE .

    LPAR            reduce using rule 94 (unary_func -> DATATYPE .)


state 45

    (96) unary_func -> UPPERCASE .

    LPAR            reduce using rule 96 (unary_func -> UPPERCASE .)


state 46

    (112) unary_func -> UNSIGNEDINT .

    LPAR            reduce using rule 112 (unary_func -> UNSIGNEDINT .)


state 47

    (119) unary_func -> LCASE .

    LPAR            reduce using rule 119 (unary_func -> LCASE .)


state 48

    (106) unary_func -> LONG .

    LPAR            reduce using rule 106 (unary_func -> LONG .)


state 49

    (91) unary_func -> ISBLANK .

    LPAR            reduce using rule 91 (unary_func -> ISBLANK .)


state 50

    (15) desc_var -> ASC . LPAR VARIABLE RPAR

    LPAR            shift and go to state 77


state 51

    (92) unary_func -> ISLITERAL .

    LPAR            reduce using rule 92 (unary_func -> ISLITERAL .)


state 52

    (98) unary_func -> INTEGER .

    LPAR            reduce using rule 98 (unary_func -> INTEGER .)


state 53

    (101) unary_func -> STRING .

    LPAR            reduce using rule 101 (unary_func -> STRING .)


state 54

    (99) unary_func -> DECIMAL .

    LPAR            reduce using rule 99 (unary_func -> DECIMAL .)


state 55

    (103) unary_func -> DATETIME .

    LPAR            reduce using rule 103 (unary_func -> DATETIME .)


state 56

    (95) unary_func -> STR .

    LPAR            reduce using rule 95 (unary_func -> STR .)


state 57

    (14) desc_var -> VARIABLE .

    RPAR            reduce using rule 14 (desc_var -> VARIABLE .)
    LIMIT           reduce using rule 14 (desc_var -> VARIABLE .)
    OFFSET          reduce using rule 14 (desc_var -> VARIABLE .)
    $end            reduce using rule 14 (desc_var -> VARIABLE .)
    DESC            reduce using rule 14 (desc_var -> VARIABLE .)
    VARIABLE        reduce using rule 14 (desc_var -> VARIABLE .)
    ASC             reduce using rule 14 (desc_var -> VARIABLE .)
    BOUND           reduce using rule 14 (desc_var -> VARIABLE .)
    ISIRI           reduce using rule 14 (desc_var -> VARIABLE .)
    ISURI           reduce using rule 14 (desc_var -> VARIABLE .)
    ISBLANK         reduce using rule 14 (desc_var -> VARIABLE .)
    ISLITERAL       reduce using rule 14 (desc_var -> VARIABLE .)
    LANG            reduce using rule 14 (desc_var -> VARIABLE .)
    DATATYPE        reduce using rule 14 (desc_var -> VARIABLE .)
    STR             reduce using rule 14 (desc_var -> VARIABLE .)
    UPPERCASE       reduce using rule 14 (desc_var -> VARIABLE .)
    DOUBLE          reduce using rule 14 (desc_var -> VARIABLE .)
    INTEGER         reduce using rule 14 (desc_var -> VARIABLE .)
    DECIMAL         reduce using rule 14 (desc_var -> VARIABLE .)
    FLOAT           reduce using rule 14 (desc_var -> VARIABLE .)
    STRING          reduce using rule 14 (desc_var -> VARIABLE .)
    BOOLEAN         reduce using rule 14 (desc_var -> VARIABLE .)
    DATETIME        reduce using rule 14 (desc_var -> VARIABLE .)
    NONPOSINT       reduce using rule 14 (desc_var -> VARIABLE .)
    NEGATIVEINT     reduce using rule 14 (desc_var -> VARIABLE .)
    LONG            reduce using rule 14 (desc_var -> VARIABLE .)
    INT             reduce using rule 14 (desc_var -> VARIABLE .)
    SHORT           reduce using rule 14 (desc_var -> VARIABLE .)
    BYTE            reduce using rule 14 (desc_var -> VARIABLE .)
    NONNEGINT       reduce using rule 14 (desc_var -> VARIABLE .)
    UNSIGNEDLONG    reduce using rule 14 (desc_var -> VARIABLE .)
    UNSIGNEDINT     reduce using rule 14 (desc_var -> VARIABLE .)
    UNSIGNEDSHORT   reduce using rule 14 (desc_var -> VARIABLE .)
    UNSIGNEDBYTE    reduce using rule 14 (desc_var -> VARIABLE .)
    POSITIVEINT     reduce using rule 14 (desc_var -> VARIABLE .)
    ID              reduce using rule 14 (desc_var -> VARIABLE .)
    UCASE           reduce using rule 14 (desc_var -> VARIABLE .)
    LCASE           reduce using rule 14 (desc_var -> VARIABLE .)
    URI             reduce using rule 14 (desc_var -> VARIABLE .)


state 58

    (109) unary_func -> BYTE .

    LPAR            reduce using rule 109 (unary_func -> BYTE .)


state 59

    (115) unary_func -> POSITIVEINT .

    LPAR            reduce using rule 115 (unary_func -> POSITIVEINT .)


state 60

    (116) unary_func -> ID . COLON ID
    (6) uri -> ID . COLON ID
    (7) uri -> ID . COLON URI

    COLON           shift and go to state 78


state 61

    (13) desc_var -> DESC . LPAR VARIABLE RPAR

    LPAR            shift and go to state 79


state 62

    (110) unary_func -> NONNEGINT .

    LPAR            reduce using rule 110 (unary_func -> NONNEGINT .)


state 63

    (118) unary_func -> UCASE .

    LPAR            reduce using rule 118 (unary_func -> UCASE .)


state 64

    (9) order_by -> ORDER BY var_order_list desc_var .
    (12) var_order_list -> var_order_list desc_var .

    LIMIT           reduce using rule 9 (order_by -> ORDER BY var_order_list desc_var .)
    OFFSET          reduce using rule 9 (order_by -> ORDER BY var_order_list desc_var .)
    $end            reduce using rule 9 (order_by -> ORDER BY var_order_list desc_var .)
    DESC            reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    VARIABLE        reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ASC             reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    BOUND           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ISIRI           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ISURI           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ISBLANK         reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ISLITERAL       reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    LANG            reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    DATATYPE        reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    STR             reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UPPERCASE       reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    DOUBLE          reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    INTEGER         reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    DECIMAL         reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    FLOAT           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    STRING          reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    BOOLEAN         reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    DATETIME        reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    NONPOSINT       reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    NEGATIVEINT     reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    LONG            reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    INT             reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    SHORT           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    BYTE            reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    NONNEGINT       reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UNSIGNEDLONG    reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UNSIGNEDINT     reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UNSIGNEDSHORT   reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UNSIGNEDBYTE    reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    POSITIVEINT     reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    ID              reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    UCASE           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    LCASE           reduce using rule 12 (var_order_list -> var_order_list desc_var .)
    URI             reduce using rule 12 (var_order_list -> var_order_list desc_var .)


state 65

    (117) unary_func -> uri .

    LPAR            reduce using rule 117 (unary_func -> uri .)


state 66

    (107) unary_func -> INT .

    LPAR            reduce using rule 107 (unary_func -> INT .)


state 67

    (97) unary_func -> DOUBLE .

    LPAR            reduce using rule 97 (unary_func -> DOUBLE .)


state 68

    (100) unary_func -> FLOAT .

    LPAR            reduce using rule 100 (unary_func -> FLOAT .)


state 69

    (88) unary_func -> BOUND .

    LPAR            reduce using rule 88 (unary_func -> BOUND .)


state 70

    (89) unary_func -> ISIRI .

    LPAR            reduce using rule 89 (unary_func -> ISIRI .)


state 71

    (102) unary_func -> BOOLEAN .

    LPAR            reduce using rule 102 (unary_func -> BOOLEAN .)


state 72

    (16) desc_var -> unary_func . LPAR desc_var RPAR

    LPAR            shift and go to state 80


state 73

    (104) unary_func -> NONPOSINT .

    LPAR            reduce using rule 104 (unary_func -> NONPOSINT .)


state 74

    (111) unary_func -> UNSIGNEDLONG .

    LPAR            reduce using rule 111 (unary_func -> UNSIGNEDLONG .)


state 75

    (22) query -> SELECT distinct ALL WHERE LKEY . group_graph_pattern RKEY
    (25) group_graph_pattern -> . union_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 90
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    join_block                     shift and go to state 85
    uri                            shift and go to state 92
    group_graph_pattern            shift and go to state 87
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 81
    bgp                            shift and go to state 84
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 76

    (21) query -> SELECT distinct var_list WHERE LKEY . group_graph_pattern RKEY
    (25) group_graph_pattern -> . union_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 90
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    join_block                     shift and go to state 85
    uri                            shift and go to state 92
    group_graph_pattern            shift and go to state 94
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 81
    bgp                            shift and go to state 84
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 77

    (15) desc_var -> ASC LPAR . VARIABLE RPAR

    VARIABLE        shift and go to state 95


state 78

    (116) unary_func -> ID COLON . ID
    (6) uri -> ID COLON . ID
    (7) uri -> ID COLON . URI

    ID              shift and go to state 96
    URI             shift and go to state 20


state 79

    (13) desc_var -> DESC LPAR . VARIABLE RPAR

    VARIABLE        shift and go to state 97


state 80

    (16) desc_var -> unary_func LPAR . desc_var RPAR
    (13) desc_var -> . DESC LPAR VARIABLE RPAR
    (14) desc_var -> . VARIABLE
    (15) desc_var -> . ASC LPAR VARIABLE RPAR
    (16) desc_var -> . unary_func LPAR desc_var RPAR
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    DESC            shift and go to state 61
    VARIABLE        shift and go to state 57
    ASC             shift and go to state 50
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    ID              shift and go to state 60
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    URI             shift and go to state 7

    unary_func                     shift and go to state 72
    desc_var                       shift and go to state 98
    uri                            shift and go to state 65

state 81

    (25) group_graph_pattern -> union_block .

    RKEY            reduce using rule 25 (group_graph_pattern -> union_block .)


state 82

    (41) bgp -> triple .

    UNION           reduce using rule 41 (bgp -> triple .)
    POINT           reduce using rule 41 (bgp -> triple .)
    LKEY            reduce using rule 41 (bgp -> triple .)
    FILTER          reduce using rule 41 (bgp -> triple .)
    OPTIONAL        reduce using rule 41 (bgp -> triple .)
    VARIABLE        reduce using rule 41 (bgp -> triple .)
    ID              reduce using rule 41 (bgp -> triple .)
    URI             reduce using rule 41 (bgp -> triple .)
    RKEY            reduce using rule 41 (bgp -> triple .)


state 83

    (122) triple -> subject . predicate object
    (123) predicate -> . ID
    (124) predicate -> . uri
    (125) predicate -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    ID              shift and go to state 102
    VARIABLE        shift and go to state 101
    URI             shift and go to state 7

    predicate                      shift and go to state 99
    uri                            shift and go to state 100

state 84

    (35) join_block -> bgp . rest_join_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    UNION           shift and go to state 107
    POINT           shift and go to state 104
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! UNION           [ reduce using rule 4 (empty -> .) ]
  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    rest_join_block                shift and go to state 108
    uri                            shift and go to state 92
    bgp                            shift and go to state 103
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 85

    (30) pjoin_block -> join_block .

    UNION           reduce using rule 30 (pjoin_block -> join_block .)
    POINT           reduce using rule 30 (pjoin_block -> join_block .)
    LKEY            reduce using rule 30 (pjoin_block -> join_block .)
    FILTER          reduce using rule 30 (pjoin_block -> join_block .)
    OPTIONAL        reduce using rule 30 (pjoin_block -> join_block .)
    VARIABLE        reduce using rule 30 (pjoin_block -> join_block .)
    ID              reduce using rule 30 (pjoin_block -> join_block .)
    URI             reduce using rule 30 (pjoin_block -> join_block .)
    RKEY            reduce using rule 30 (pjoin_block -> join_block .)


state 86

    (44) bgp -> OPTIONAL . LKEY group_graph_pattern RKEY

    LKEY            shift and go to state 109


state 87

    (22) query -> SELECT distinct ALL WHERE LKEY group_graph_pattern . RKEY

    RKEY            shift and go to state 110


state 88

    (26) union_block -> pjoin_block . rest_union_block POINT pjoin_block
    (27) union_block -> pjoin_block . rest_union_block pjoin_block
    (28) union_block -> pjoin_block . rest_union_block
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

    UNION           shift and go to state 111
    POINT           reduce using rule 4 (empty -> .)
    LKEY            reduce using rule 4 (empty -> .)
    FILTER          reduce using rule 4 (empty -> .)
    OPTIONAL        reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)
    URI             reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)

    rest_union_block               shift and go to state 112
    empty                          shift and go to state 113

state 89

    (31) pjoin_block -> empty .

    UNION           reduce using rule 31 (pjoin_block -> empty .)
    POINT           reduce using rule 31 (pjoin_block -> empty .)
    LKEY            reduce using rule 31 (pjoin_block -> empty .)
    FILTER          reduce using rule 31 (pjoin_block -> empty .)
    OPTIONAL        reduce using rule 31 (pjoin_block -> empty .)
    VARIABLE        reduce using rule 31 (pjoin_block -> empty .)
    ID              reduce using rule 31 (pjoin_block -> empty .)
    URI             reduce using rule 31 (pjoin_block -> empty .)
    RKEY            reduce using rule 31 (pjoin_block -> empty .)


state 90

    (29) pjoin_block -> LKEY . join_block RKEY
    (34) join_block -> LKEY . union_block RKEY rest_join_block
    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (122) triple -> . subject predicate object
    (4) empty -> .
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 116
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    bgp                            shift and go to state 117
    join_block                     shift and go to state 115
    uri                            shift and go to state 92
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 114
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 91

    (127) subject -> VARIABLE .

    ID              reduce using rule 127 (subject -> VARIABLE .)
    VARIABLE        reduce using rule 127 (subject -> VARIABLE .)
    URI             reduce using rule 127 (subject -> VARIABLE .)


state 92

    (126) subject -> uri .

    ID              reduce using rule 126 (subject -> uri .)
    VARIABLE        reduce using rule 126 (subject -> uri .)
    URI             reduce using rule 126 (subject -> uri .)


state 93

    (42) bgp -> FILTER . LPAR expression RPAR
    (43) bgp -> FILTER . express_rel
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 118
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 131
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 125
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135

state 94

    (21) query -> SELECT distinct var_list WHERE LKEY group_graph_pattern . RKEY

    RKEY            shift and go to state 136


state 95

    (15) desc_var -> ASC LPAR VARIABLE . RPAR

    RPAR            shift and go to state 137


state 96

    (116) unary_func -> ID COLON ID .
    (6) uri -> ID COLON ID .

  ! reduce/reduce conflict for LPAR resolved using rule 6 (uri -> ID COLON ID .)
    LPAR            reduce using rule 6 (uri -> ID COLON ID .)

  ! LPAR            [ reduce using rule 116 (unary_func -> ID COLON ID .) ]


state 97

    (13) desc_var -> DESC LPAR VARIABLE . RPAR

    RPAR            shift and go to state 138


state 98

    (16) desc_var -> unary_func LPAR desc_var . RPAR

    RPAR            shift and go to state 139


state 99

    (122) triple -> subject predicate . object
    (128) object -> . uri
    (129) object -> . VARIABLE
    (130) object -> . CONSTANT
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    VARIABLE        shift and go to state 143
    CONSTANT        shift and go to state 140
    ID              shift and go to state 8
    URI             shift and go to state 7

    object                         shift and go to state 141
    uri                            shift and go to state 142

state 100

    (124) predicate -> uri .

    VARIABLE        reduce using rule 124 (predicate -> uri .)
    CONSTANT        reduce using rule 124 (predicate -> uri .)
    ID              reduce using rule 124 (predicate -> uri .)
    URI             reduce using rule 124 (predicate -> uri .)


state 101

    (125) predicate -> VARIABLE .

    VARIABLE        reduce using rule 125 (predicate -> VARIABLE .)
    CONSTANT        reduce using rule 125 (predicate -> VARIABLE .)
    ID              reduce using rule 125 (predicate -> VARIABLE .)
    URI             reduce using rule 125 (predicate -> VARIABLE .)


state 102

    (123) predicate -> ID .
    (6) uri -> ID . COLON ID
    (7) uri -> ID . COLON URI

    VARIABLE        reduce using rule 123 (predicate -> ID .)
    CONSTANT        reduce using rule 123 (predicate -> ID .)
    ID              reduce using rule 123 (predicate -> ID .)
    URI             reduce using rule 123 (predicate -> ID .)
    COLON           shift and go to state 12


state 103

    (38) rest_join_block -> bgp . rest_join_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    UNION           shift and go to state 107
    POINT           shift and go to state 104
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! UNION           [ reduce using rule 4 (empty -> .) ]
  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    rest_join_block                shift and go to state 144
    uri                            shift and go to state 92
    bgp                            shift and go to state 103
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 104

    (37) rest_join_block -> POINT . bgp rest_join_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    uri                            shift and go to state 92
    bgp                            shift and go to state 145
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 105

    (36) rest_join_block -> empty .

    RKEY            reduce using rule 36 (rest_join_block -> empty .)
    UNION           reduce using rule 36 (rest_join_block -> empty .)
    POINT           reduce using rule 36 (rest_join_block -> empty .)
    LKEY            reduce using rule 36 (rest_join_block -> empty .)
    FILTER          reduce using rule 36 (rest_join_block -> empty .)
    OPTIONAL        reduce using rule 36 (rest_join_block -> empty .)
    VARIABLE        reduce using rule 36 (rest_join_block -> empty .)
    ID              reduce using rule 36 (rest_join_block -> empty .)
    URI             reduce using rule 36 (rest_join_block -> empty .)


state 106

    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 148
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    join_block                     shift and go to state 147
    uri                            shift and go to state 92
    bgp                            shift and go to state 146
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 107

    (40) bgp -> bgp UNION . bgp rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    uri                            shift and go to state 92
    bgp                            shift and go to state 149
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 108

    (35) join_block -> bgp rest_join_block .

    RKEY            reduce using rule 35 (join_block -> bgp rest_join_block .)
    UNION           reduce using rule 35 (join_block -> bgp rest_join_block .)
    POINT           reduce using rule 35 (join_block -> bgp rest_join_block .)
    LKEY            reduce using rule 35 (join_block -> bgp rest_join_block .)
    FILTER          reduce using rule 35 (join_block -> bgp rest_join_block .)
    OPTIONAL        reduce using rule 35 (join_block -> bgp rest_join_block .)
    VARIABLE        reduce using rule 35 (join_block -> bgp rest_join_block .)
    ID              reduce using rule 35 (join_block -> bgp rest_join_block .)
    URI             reduce using rule 35 (join_block -> bgp rest_join_block .)


state 109

    (44) bgp -> OPTIONAL LKEY . group_graph_pattern RKEY
    (25) group_graph_pattern -> . union_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 90
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    join_block                     shift and go to state 85
    uri                            shift and go to state 92
    group_graph_pattern            shift and go to state 150
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 81
    bgp                            shift and go to state 84
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 110

    (22) query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY .

    ORDER           reduce using rule 22 (query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY .)
    LIMIT           reduce using rule 22 (query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY .)
    OFFSET          reduce using rule 22 (query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY .)
    $end            reduce using rule 22 (query -> SELECT distinct ALL WHERE LKEY group_graph_pattern RKEY .)


state 111

    (33) rest_union_block -> UNION . LKEY join_block rest_union_block RKEY rest_union_block

    LKEY            shift and go to state 151


state 112

    (26) union_block -> pjoin_block rest_union_block . POINT pjoin_block
    (27) union_block -> pjoin_block rest_union_block . pjoin_block
    (28) union_block -> pjoin_block rest_union_block .
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! reduce/reduce conflict for RKEY resolved using rule 4 (empty -> .)
    POINT           shift and go to state 152
    LKEY            shift and go to state 90
    RKEY            reduce using rule 4 (empty -> .)
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! RKEY            [ reduce using rule 28 (union_block -> pjoin_block rest_union_block .) ]

    bgp                            shift and go to state 84
    join_block                     shift and go to state 85
    uri                            shift and go to state 92
    pjoin_block                    shift and go to state 153
    triple                         shift and go to state 82
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 113

    (32) rest_union_block -> empty .

    RKEY            reduce using rule 32 (rest_union_block -> empty .)
    POINT           reduce using rule 32 (rest_union_block -> empty .)
    LKEY            reduce using rule 32 (rest_union_block -> empty .)
    FILTER          reduce using rule 32 (rest_union_block -> empty .)
    OPTIONAL        reduce using rule 32 (rest_union_block -> empty .)
    VARIABLE        reduce using rule 32 (rest_union_block -> empty .)
    ID              reduce using rule 32 (rest_union_block -> empty .)
    URI             reduce using rule 32 (rest_union_block -> empty .)
    UNION           reduce using rule 32 (rest_union_block -> empty .)


state 114

    (34) join_block -> LKEY union_block . RKEY rest_join_block

    RKEY            shift and go to state 154


state 115

    (29) pjoin_block -> LKEY join_block . RKEY
    (45) bgp -> LKEY join_block . RKEY
    (30) pjoin_block -> join_block .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 155
    UNION           reduce using rule 30 (pjoin_block -> join_block .)
    POINT           reduce using rule 30 (pjoin_block -> join_block .)
    LKEY            reduce using rule 30 (pjoin_block -> join_block .)
    FILTER          reduce using rule 30 (pjoin_block -> join_block .)
    OPTIONAL        reduce using rule 30 (pjoin_block -> join_block .)
    VARIABLE        reduce using rule 30 (pjoin_block -> join_block .)
    ID              reduce using rule 30 (pjoin_block -> join_block .)
    URI             reduce using rule 30 (pjoin_block -> join_block .)

  ! RKEY            [ reduce using rule 30 (pjoin_block -> join_block .) ]


state 116

    (34) join_block -> LKEY . union_block RKEY rest_join_block
    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (29) pjoin_block -> LKEY . join_block RKEY
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (122) triple -> . subject predicate object
    (4) empty -> .
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 157
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    bgp                            shift and go to state 146
    join_block                     shift and go to state 156
    uri                            shift and go to state 92
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 114
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 117

    (39) bgp -> LKEY bgp . UNION bgp rest_union_block RKEY
    (35) join_block -> bgp . rest_join_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    UNION           shift and go to state 158
    POINT           shift and go to state 104
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! UNION           [ reduce using rule 4 (empty -> .) ]
  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    rest_join_block                shift and go to state 108
    uri                            shift and go to state 92
    bgp                            shift and go to state 103
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 118

    (42) bgp -> FILTER LPAR . expression RPAR
    (51) express_rel -> LPAR . express_rel RPAR
    (67) express_arg -> LPAR . express_arg RPAR
    (46) expression -> . express_rel LOGOP expression
    (47) expression -> . express_rel
    (48) expression -> . LPAR expression RPAR
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 159
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 161
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 160
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135
    expression                     shift and go to state 162

state 119

    (56) express_arg -> CONSTANT .
    (86) binary_func -> CONSTANT .

    EQUALS          reduce using rule 56 (express_arg -> CONSTANT .)
    LESS            reduce using rule 56 (express_arg -> CONSTANT .)
    LESSEQ          reduce using rule 56 (express_arg -> CONSTANT .)
    GREATER         reduce using rule 56 (express_arg -> CONSTANT .)
    GREATEREQ       reduce using rule 56 (express_arg -> CONSTANT .)
    NEQUALS         reduce using rule 56 (express_arg -> CONSTANT .)
    PLUS            reduce using rule 56 (express_arg -> CONSTANT .)
    MINUS           reduce using rule 56 (express_arg -> CONSTANT .)
    TIMES           reduce using rule 56 (express_arg -> CONSTANT .)
    DIV             reduce using rule 56 (express_arg -> CONSTANT .)
    UNION           reduce using rule 56 (express_arg -> CONSTANT .)
    POINT           reduce using rule 56 (express_arg -> CONSTANT .)
    LKEY            reduce using rule 56 (express_arg -> CONSTANT .)
    FILTER          reduce using rule 56 (express_arg -> CONSTANT .)
    OPTIONAL        reduce using rule 56 (express_arg -> CONSTANT .)
    VARIABLE        reduce using rule 56 (express_arg -> CONSTANT .)
    ID              reduce using rule 56 (express_arg -> CONSTANT .)
    URI             reduce using rule 56 (express_arg -> CONSTANT .)
    RKEY            reduce using rule 56 (express_arg -> CONSTANT .)
    RPAR            reduce using rule 56 (express_arg -> CONSTANT .)
    AND             reduce using rule 56 (express_arg -> CONSTANT .)
    OR              reduce using rule 56 (express_arg -> CONSTANT .)
    COMA            reduce using rule 56 (express_arg -> CONSTANT .)
    LPAR            reduce using rule 86 (binary_func -> CONSTANT .)


state 120

    (52) express_rel -> NEG . LPAR expression RPAR
    (53) express_rel -> NEG . express_rel
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 163
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 164
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 125
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135

state 121

    (57) express_arg -> NUMBER .
    (58) express_arg -> NUMBER . POINT NUMBER

  ! shift/reduce conflict for POINT resolved as shift
    EQUALS          reduce using rule 57 (express_arg -> NUMBER .)
    LESS            reduce using rule 57 (express_arg -> NUMBER .)
    LESSEQ          reduce using rule 57 (express_arg -> NUMBER .)
    GREATER         reduce using rule 57 (express_arg -> NUMBER .)
    GREATEREQ       reduce using rule 57 (express_arg -> NUMBER .)
    NEQUALS         reduce using rule 57 (express_arg -> NUMBER .)
    PLUS            reduce using rule 57 (express_arg -> NUMBER .)
    MINUS           reduce using rule 57 (express_arg -> NUMBER .)
    TIMES           reduce using rule 57 (express_arg -> NUMBER .)
    DIV             reduce using rule 57 (express_arg -> NUMBER .)
    UNION           reduce using rule 57 (express_arg -> NUMBER .)
    LKEY            reduce using rule 57 (express_arg -> NUMBER .)
    FILTER          reduce using rule 57 (express_arg -> NUMBER .)
    OPTIONAL        reduce using rule 57 (express_arg -> NUMBER .)
    VARIABLE        reduce using rule 57 (express_arg -> NUMBER .)
    ID              reduce using rule 57 (express_arg -> NUMBER .)
    URI             reduce using rule 57 (express_arg -> NUMBER .)
    RKEY            reduce using rule 57 (express_arg -> NUMBER .)
    RPAR            reduce using rule 57 (express_arg -> NUMBER .)
    AND             reduce using rule 57 (express_arg -> NUMBER .)
    OR              reduce using rule 57 (express_arg -> NUMBER .)
    COMA            reduce using rule 57 (express_arg -> NUMBER .)
    POINT           shift and go to state 165

  ! POINT           [ reduce using rule 57 (express_arg -> NUMBER .) ]


state 122

    (55) express_arg -> VARIABLE .

    EQUALS          reduce using rule 55 (express_arg -> VARIABLE .)
    LESS            reduce using rule 55 (express_arg -> VARIABLE .)
    LESSEQ          reduce using rule 55 (express_arg -> VARIABLE .)
    GREATER         reduce using rule 55 (express_arg -> VARIABLE .)
    GREATEREQ       reduce using rule 55 (express_arg -> VARIABLE .)
    NEQUALS         reduce using rule 55 (express_arg -> VARIABLE .)
    PLUS            reduce using rule 55 (express_arg -> VARIABLE .)
    MINUS           reduce using rule 55 (express_arg -> VARIABLE .)
    TIMES           reduce using rule 55 (express_arg -> VARIABLE .)
    DIV             reduce using rule 55 (express_arg -> VARIABLE .)
    UNION           reduce using rule 55 (express_arg -> VARIABLE .)
    POINT           reduce using rule 55 (express_arg -> VARIABLE .)
    LKEY            reduce using rule 55 (express_arg -> VARIABLE .)
    FILTER          reduce using rule 55 (express_arg -> VARIABLE .)
    OPTIONAL        reduce using rule 55 (express_arg -> VARIABLE .)
    VARIABLE        reduce using rule 55 (express_arg -> VARIABLE .)
    ID              reduce using rule 55 (express_arg -> VARIABLE .)
    URI             reduce using rule 55 (express_arg -> VARIABLE .)
    RKEY            reduce using rule 55 (express_arg -> VARIABLE .)
    RPAR            reduce using rule 55 (express_arg -> VARIABLE .)
    AND             reduce using rule 55 (express_arg -> VARIABLE .)
    OR              reduce using rule 55 (express_arg -> VARIABLE .)
    COMA            reduce using rule 55 (express_arg -> VARIABLE .)


state 123

    (74) UNARYOP -> MINUS .

    VARIABLE        reduce using rule 74 (UNARYOP -> MINUS .)
    CONSTANT        reduce using rule 74 (UNARYOP -> MINUS .)
    NUMBER          reduce using rule 74 (UNARYOP -> MINUS .)
    REGEX           reduce using rule 74 (UNARYOP -> MINUS .)
    LPAR            reduce using rule 74 (UNARYOP -> MINUS .)
    ID              reduce using rule 74 (UNARYOP -> MINUS .)
    URI             reduce using rule 74 (UNARYOP -> MINUS .)
    SAMETERM        reduce using rule 74 (UNARYOP -> MINUS .)
    LANGMATCHES     reduce using rule 74 (UNARYOP -> MINUS .)
    CONTAINS        reduce using rule 74 (UNARYOP -> MINUS .)
    BOUND           reduce using rule 74 (UNARYOP -> MINUS .)
    ISIRI           reduce using rule 74 (UNARYOP -> MINUS .)
    ISURI           reduce using rule 74 (UNARYOP -> MINUS .)
    ISBLANK         reduce using rule 74 (UNARYOP -> MINUS .)
    ISLITERAL       reduce using rule 74 (UNARYOP -> MINUS .)
    LANG            reduce using rule 74 (UNARYOP -> MINUS .)
    DATATYPE        reduce using rule 74 (UNARYOP -> MINUS .)
    STR             reduce using rule 74 (UNARYOP -> MINUS .)
    UPPERCASE       reduce using rule 74 (UNARYOP -> MINUS .)
    DOUBLE          reduce using rule 74 (UNARYOP -> MINUS .)
    INTEGER         reduce using rule 74 (UNARYOP -> MINUS .)
    DECIMAL         reduce using rule 74 (UNARYOP -> MINUS .)
    FLOAT           reduce using rule 74 (UNARYOP -> MINUS .)
    STRING          reduce using rule 74 (UNARYOP -> MINUS .)
    BOOLEAN         reduce using rule 74 (UNARYOP -> MINUS .)
    DATETIME        reduce using rule 74 (UNARYOP -> MINUS .)
    NONPOSINT       reduce using rule 74 (UNARYOP -> MINUS .)
    NEGATIVEINT     reduce using rule 74 (UNARYOP -> MINUS .)
    LONG            reduce using rule 74 (UNARYOP -> MINUS .)
    INT             reduce using rule 74 (UNARYOP -> MINUS .)
    SHORT           reduce using rule 74 (UNARYOP -> MINUS .)
    BYTE            reduce using rule 74 (UNARYOP -> MINUS .)
    NONNEGINT       reduce using rule 74 (UNARYOP -> MINUS .)
    UNSIGNEDLONG    reduce using rule 74 (UNARYOP -> MINUS .)
    UNSIGNEDINT     reduce using rule 74 (UNARYOP -> MINUS .)
    UNSIGNEDSHORT   reduce using rule 74 (UNARYOP -> MINUS .)
    UNSIGNEDBYTE    reduce using rule 74 (UNARYOP -> MINUS .)
    POSITIVEINT     reduce using rule 74 (UNARYOP -> MINUS .)
    UCASE           reduce using rule 74 (UNARYOP -> MINUS .)
    LCASE           reduce using rule 74 (UNARYOP -> MINUS .)
    PLUS            reduce using rule 74 (UNARYOP -> MINUS .)
    MINUS           reduce using rule 74 (UNARYOP -> MINUS .)


state 124

    (63) express_arg -> binary_func . LPAR express_arg COMA express_arg RPAR

    LPAR            shift and go to state 166


state 125

    (49) express_rel -> express_arg . RELOP express_rel
    (50) express_rel -> express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV

    UNION           reduce using rule 50 (express_rel -> express_arg .)
    POINT           reduce using rule 50 (express_rel -> express_arg .)
    LKEY            reduce using rule 50 (express_rel -> express_arg .)
    FILTER          reduce using rule 50 (express_rel -> express_arg .)
    OPTIONAL        reduce using rule 50 (express_rel -> express_arg .)
    VARIABLE        reduce using rule 50 (express_rel -> express_arg .)
    ID              reduce using rule 50 (express_rel -> express_arg .)
    URI             reduce using rule 50 (express_rel -> express_arg .)
    RKEY            reduce using rule 50 (express_rel -> express_arg .)
    RPAR            reduce using rule 50 (express_rel -> express_arg .)
    AND             reduce using rule 50 (express_rel -> express_arg .)
    OR              reduce using rule 50 (express_rel -> express_arg .)
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175

    RELOP                          shift and go to state 167
    ARITOP                         shift and go to state 174

state 126

    (84) binary_func -> SAMETERM .

    LPAR            reduce using rule 84 (binary_func -> SAMETERM .)


state 127

    (73) UNARYOP -> PLUS .

    VARIABLE        reduce using rule 73 (UNARYOP -> PLUS .)
    CONSTANT        reduce using rule 73 (UNARYOP -> PLUS .)
    NUMBER          reduce using rule 73 (UNARYOP -> PLUS .)
    REGEX           reduce using rule 73 (UNARYOP -> PLUS .)
    LPAR            reduce using rule 73 (UNARYOP -> PLUS .)
    ID              reduce using rule 73 (UNARYOP -> PLUS .)
    URI             reduce using rule 73 (UNARYOP -> PLUS .)
    SAMETERM        reduce using rule 73 (UNARYOP -> PLUS .)
    LANGMATCHES     reduce using rule 73 (UNARYOP -> PLUS .)
    CONTAINS        reduce using rule 73 (UNARYOP -> PLUS .)
    BOUND           reduce using rule 73 (UNARYOP -> PLUS .)
    ISIRI           reduce using rule 73 (UNARYOP -> PLUS .)
    ISURI           reduce using rule 73 (UNARYOP -> PLUS .)
    ISBLANK         reduce using rule 73 (UNARYOP -> PLUS .)
    ISLITERAL       reduce using rule 73 (UNARYOP -> PLUS .)
    LANG            reduce using rule 73 (UNARYOP -> PLUS .)
    DATATYPE        reduce using rule 73 (UNARYOP -> PLUS .)
    STR             reduce using rule 73 (UNARYOP -> PLUS .)
    UPPERCASE       reduce using rule 73 (UNARYOP -> PLUS .)
    DOUBLE          reduce using rule 73 (UNARYOP -> PLUS .)
    INTEGER         reduce using rule 73 (UNARYOP -> PLUS .)
    DECIMAL         reduce using rule 73 (UNARYOP -> PLUS .)
    FLOAT           reduce using rule 73 (UNARYOP -> PLUS .)
    STRING          reduce using rule 73 (UNARYOP -> PLUS .)
    BOOLEAN         reduce using rule 73 (UNARYOP -> PLUS .)
    DATETIME        reduce using rule 73 (UNARYOP -> PLUS .)
    NONPOSINT       reduce using rule 73 (UNARYOP -> PLUS .)
    NEGATIVEINT     reduce using rule 73 (UNARYOP -> PLUS .)
    LONG            reduce using rule 73 (UNARYOP -> PLUS .)
    INT             reduce using rule 73 (UNARYOP -> PLUS .)
    SHORT           reduce using rule 73 (UNARYOP -> PLUS .)
    BYTE            reduce using rule 73 (UNARYOP -> PLUS .)
    NONNEGINT       reduce using rule 73 (UNARYOP -> PLUS .)
    UNSIGNEDLONG    reduce using rule 73 (UNARYOP -> PLUS .)
    UNSIGNEDINT     reduce using rule 73 (UNARYOP -> PLUS .)
    UNSIGNEDSHORT   reduce using rule 73 (UNARYOP -> PLUS .)
    UNSIGNEDBYTE    reduce using rule 73 (UNARYOP -> PLUS .)
    POSITIVEINT     reduce using rule 73 (UNARYOP -> PLUS .)
    UCASE           reduce using rule 73 (UNARYOP -> PLUS .)
    LCASE           reduce using rule 73 (UNARYOP -> PLUS .)
    PLUS            reduce using rule 73 (UNARYOP -> PLUS .)
    MINUS           reduce using rule 73 (UNARYOP -> PLUS .)


state 128

    (85) binary_func -> LANGMATCHES .

    LPAR            reduce using rule 85 (binary_func -> LANGMATCHES .)


state 129

    (59) express_arg -> REGEX . LPAR express_arg COMA pattern_arg regex_flag
    (83) binary_func -> REGEX .

  ! shift/reduce conflict for LPAR resolved as shift
    LPAR            shift and go to state 179

  ! LPAR            [ reduce using rule 83 (binary_func -> REGEX .) ]


state 130

    (6) uri -> ID . COLON ID
    (7) uri -> ID . COLON URI
    (116) unary_func -> ID . COLON ID

    COLON           shift and go to state 180


state 131

    (43) bgp -> FILTER express_rel .

    UNION           reduce using rule 43 (bgp -> FILTER express_rel .)
    POINT           reduce using rule 43 (bgp -> FILTER express_rel .)
    LKEY            reduce using rule 43 (bgp -> FILTER express_rel .)
    FILTER          reduce using rule 43 (bgp -> FILTER express_rel .)
    OPTIONAL        reduce using rule 43 (bgp -> FILTER express_rel .)
    VARIABLE        reduce using rule 43 (bgp -> FILTER express_rel .)
    ID              reduce using rule 43 (bgp -> FILTER express_rel .)
    URI             reduce using rule 43 (bgp -> FILTER express_rel .)
    RKEY            reduce using rule 43 (bgp -> FILTER express_rel .)


state 132

    (65) express_arg -> UNARYOP . express_arg
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 182
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 133

    (87) binary_func -> CONTAINS .

    LPAR            reduce using rule 87 (binary_func -> CONTAINS .)


state 134

    (54) express_arg -> uri .
    (117) unary_func -> uri .

    EQUALS          reduce using rule 54 (express_arg -> uri .)
    LESS            reduce using rule 54 (express_arg -> uri .)
    LESSEQ          reduce using rule 54 (express_arg -> uri .)
    GREATER         reduce using rule 54 (express_arg -> uri .)
    GREATEREQ       reduce using rule 54 (express_arg -> uri .)
    NEQUALS         reduce using rule 54 (express_arg -> uri .)
    PLUS            reduce using rule 54 (express_arg -> uri .)
    MINUS           reduce using rule 54 (express_arg -> uri .)
    TIMES           reduce using rule 54 (express_arg -> uri .)
    DIV             reduce using rule 54 (express_arg -> uri .)
    UNION           reduce using rule 54 (express_arg -> uri .)
    POINT           reduce using rule 54 (express_arg -> uri .)
    LKEY            reduce using rule 54 (express_arg -> uri .)
    FILTER          reduce using rule 54 (express_arg -> uri .)
    OPTIONAL        reduce using rule 54 (express_arg -> uri .)
    VARIABLE        reduce using rule 54 (express_arg -> uri .)
    ID              reduce using rule 54 (express_arg -> uri .)
    URI             reduce using rule 54 (express_arg -> uri .)
    RKEY            reduce using rule 54 (express_arg -> uri .)
    RPAR            reduce using rule 54 (express_arg -> uri .)
    AND             reduce using rule 54 (express_arg -> uri .)
    OR              reduce using rule 54 (express_arg -> uri .)
    COMA            reduce using rule 54 (express_arg -> uri .)
    LPAR            reduce using rule 117 (unary_func -> uri .)


state 135

    (64) express_arg -> unary_func . LPAR express_arg RPAR

    LPAR            shift and go to state 183


state 136

    (21) query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY .

    ORDER           reduce using rule 21 (query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY .)
    LIMIT           reduce using rule 21 (query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY .)
    OFFSET          reduce using rule 21 (query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY .)
    $end            reduce using rule 21 (query -> SELECT distinct var_list WHERE LKEY group_graph_pattern RKEY .)


state 137

    (15) desc_var -> ASC LPAR VARIABLE RPAR .

    RPAR            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    LIMIT           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    OFFSET          reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    $end            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    DESC            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    VARIABLE        reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ASC             reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    BOUND           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ISIRI           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ISURI           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ISBLANK         reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ISLITERAL       reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    LANG            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    DATATYPE        reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    STR             reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UPPERCASE       reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    DOUBLE          reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    INTEGER         reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    DECIMAL         reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    FLOAT           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    STRING          reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    BOOLEAN         reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    DATETIME        reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    NONPOSINT       reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    NEGATIVEINT     reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    LONG            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    INT             reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    SHORT           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    BYTE            reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    NONNEGINT       reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UNSIGNEDLONG    reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UNSIGNEDINT     reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UNSIGNEDSHORT   reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UNSIGNEDBYTE    reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    POSITIVEINT     reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    ID              reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    UCASE           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    LCASE           reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)
    URI             reduce using rule 15 (desc_var -> ASC LPAR VARIABLE RPAR .)


state 138

    (13) desc_var -> DESC LPAR VARIABLE RPAR .

    RPAR            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    LIMIT           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    OFFSET          reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    $end            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    DESC            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    VARIABLE        reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ASC             reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    BOUND           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ISIRI           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ISURI           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ISBLANK         reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ISLITERAL       reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    LANG            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    DATATYPE        reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    STR             reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UPPERCASE       reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    DOUBLE          reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    INTEGER         reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    DECIMAL         reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    FLOAT           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    STRING          reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    BOOLEAN         reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    DATETIME        reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    NONPOSINT       reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    NEGATIVEINT     reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    LONG            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    INT             reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    SHORT           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    BYTE            reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    NONNEGINT       reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UNSIGNEDLONG    reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UNSIGNEDINT     reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UNSIGNEDSHORT   reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UNSIGNEDBYTE    reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    POSITIVEINT     reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    ID              reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    UCASE           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    LCASE           reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)
    URI             reduce using rule 13 (desc_var -> DESC LPAR VARIABLE RPAR .)


state 139

    (16) desc_var -> unary_func LPAR desc_var RPAR .

    RPAR            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    LIMIT           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    OFFSET          reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    $end            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    DESC            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    VARIABLE        reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ASC             reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    BOUND           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ISIRI           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ISURI           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ISBLANK         reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ISLITERAL       reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    LANG            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    DATATYPE        reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    STR             reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UPPERCASE       reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    DOUBLE          reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    INTEGER         reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    DECIMAL         reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    FLOAT           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    STRING          reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    BOOLEAN         reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    DATETIME        reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    NONPOSINT       reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    NEGATIVEINT     reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    LONG            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    INT             reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    SHORT           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    BYTE            reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    NONNEGINT       reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UNSIGNEDLONG    reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UNSIGNEDINT     reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UNSIGNEDSHORT   reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UNSIGNEDBYTE    reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    POSITIVEINT     reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    ID              reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    UCASE           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    LCASE           reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)
    URI             reduce using rule 16 (desc_var -> unary_func LPAR desc_var RPAR .)


state 140

    (130) object -> CONSTANT .

    UNION           reduce using rule 130 (object -> CONSTANT .)
    POINT           reduce using rule 130 (object -> CONSTANT .)
    LKEY            reduce using rule 130 (object -> CONSTANT .)
    FILTER          reduce using rule 130 (object -> CONSTANT .)
    OPTIONAL        reduce using rule 130 (object -> CONSTANT .)
    VARIABLE        reduce using rule 130 (object -> CONSTANT .)
    ID              reduce using rule 130 (object -> CONSTANT .)
    URI             reduce using rule 130 (object -> CONSTANT .)
    RKEY            reduce using rule 130 (object -> CONSTANT .)


state 141

    (122) triple -> subject predicate object .

    UNION           reduce using rule 122 (triple -> subject predicate object .)
    POINT           reduce using rule 122 (triple -> subject predicate object .)
    LKEY            reduce using rule 122 (triple -> subject predicate object .)
    FILTER          reduce using rule 122 (triple -> subject predicate object .)
    OPTIONAL        reduce using rule 122 (triple -> subject predicate object .)
    VARIABLE        reduce using rule 122 (triple -> subject predicate object .)
    ID              reduce using rule 122 (triple -> subject predicate object .)
    URI             reduce using rule 122 (triple -> subject predicate object .)
    RKEY            reduce using rule 122 (triple -> subject predicate object .)


state 142

    (128) object -> uri .

    UNION           reduce using rule 128 (object -> uri .)
    POINT           reduce using rule 128 (object -> uri .)
    LKEY            reduce using rule 128 (object -> uri .)
    FILTER          reduce using rule 128 (object -> uri .)
    OPTIONAL        reduce using rule 128 (object -> uri .)
    VARIABLE        reduce using rule 128 (object -> uri .)
    ID              reduce using rule 128 (object -> uri .)
    URI             reduce using rule 128 (object -> uri .)
    RKEY            reduce using rule 128 (object -> uri .)


state 143

    (129) object -> VARIABLE .

    UNION           reduce using rule 129 (object -> VARIABLE .)
    POINT           reduce using rule 129 (object -> VARIABLE .)
    LKEY            reduce using rule 129 (object -> VARIABLE .)
    FILTER          reduce using rule 129 (object -> VARIABLE .)
    OPTIONAL        reduce using rule 129 (object -> VARIABLE .)
    VARIABLE        reduce using rule 129 (object -> VARIABLE .)
    ID              reduce using rule 129 (object -> VARIABLE .)
    URI             reduce using rule 129 (object -> VARIABLE .)
    RKEY            reduce using rule 129 (object -> VARIABLE .)


state 144

    (38) rest_join_block -> bgp rest_join_block .

    RKEY            reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    UNION           reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    POINT           reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    LKEY            reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    FILTER          reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    OPTIONAL        reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    VARIABLE        reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    ID              reduce using rule 38 (rest_join_block -> bgp rest_join_block .)
    URI             reduce using rule 38 (rest_join_block -> bgp rest_join_block .)


state 145

    (37) rest_join_block -> POINT bgp . rest_join_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    UNION           shift and go to state 107
    POINT           shift and go to state 104
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! UNION           [ reduce using rule 4 (empty -> .) ]
  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    rest_join_block                shift and go to state 184
    uri                            shift and go to state 92
    bgp                            shift and go to state 103
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 146

    (39) bgp -> LKEY bgp . UNION bgp rest_union_block RKEY
    (40) bgp -> bgp . UNION bgp rest_union_block
    (35) join_block -> bgp . rest_join_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    UNION           shift and go to state 158
    POINT           shift and go to state 104
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! UNION           [ reduce using rule 4 (empty -> .) ]
  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    rest_join_block                shift and go to state 108
    uri                            shift and go to state 92
    bgp                            shift and go to state 103
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 147

    (45) bgp -> LKEY join_block . RKEY

    RKEY            shift and go to state 185


state 148

    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (34) join_block -> LKEY . union_block RKEY rest_join_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (122) triple -> . subject predicate object
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (4) empty -> .
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 157
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    join_block                     shift and go to state 186
    uri                            shift and go to state 92
    bgp                            shift and go to state 146
    union_block                    shift and go to state 114
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 149

    (40) bgp -> bgp UNION bgp . rest_union_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

  ! shift/reduce conflict for UNION resolved as shift
    UNION           shift and go to state 187
    POINT           reduce using rule 4 (empty -> .)
    LKEY            reduce using rule 4 (empty -> .)
    FILTER          reduce using rule 4 (empty -> .)
    OPTIONAL        reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)
    URI             reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)

  ! UNION           [ reduce using rule 4 (empty -> .) ]

    rest_union_block               shift and go to state 188
    empty                          shift and go to state 113

state 150

    (44) bgp -> OPTIONAL LKEY group_graph_pattern . RKEY

    RKEY            shift and go to state 189


state 151

    (33) rest_union_block -> UNION LKEY . join_block rest_union_block RKEY rest_union_block
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 191
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    join_block                     shift and go to state 190
    uri                            shift and go to state 92
    bgp                            shift and go to state 84
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 152

    (26) union_block -> pjoin_block rest_union_block POINT . pjoin_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 90
    RKEY            reduce using rule 4 (empty -> .)
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    bgp                            shift and go to state 84
    join_block                     shift and go to state 85
    uri                            shift and go to state 92
    pjoin_block                    shift and go to state 192
    triple                         shift and go to state 82
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 153

    (27) union_block -> pjoin_block rest_union_block pjoin_block .

    RKEY            reduce using rule 27 (union_block -> pjoin_block rest_union_block pjoin_block .)


state 154

    (34) join_block -> LKEY union_block RKEY . rest_join_block
    (36) rest_join_block -> . empty
    (37) rest_join_block -> . POINT bgp rest_join_block
    (38) rest_join_block -> . bgp rest_join_block
    (4) empty -> .
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for POINT resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    POINT           shift and go to state 104
    UNION           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! POINT           [ reduce using rule 4 (empty -> .) ]
  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    bgp                            shift and go to state 103
    uri                            shift and go to state 92
    rest_join_block                shift and go to state 193
    triple                         shift and go to state 82
    empty                          shift and go to state 105
    subject                        shift and go to state 83

state 155

    (29) pjoin_block -> LKEY join_block RKEY .
    (45) bgp -> LKEY join_block RKEY .

  ! reduce/reduce conflict for UNION resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for POINT resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for LKEY resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for FILTER resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for OPTIONAL resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for ID resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for URI resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for RKEY resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    UNION           reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    POINT           reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    LKEY            reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    FILTER          reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    OPTIONAL        reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    VARIABLE        reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    ID              reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    URI             reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    RKEY            reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)

  ! UNION           [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! POINT           [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! LKEY            [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! FILTER          [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! OPTIONAL        [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! VARIABLE        [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! ID              [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! URI             [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! RKEY            [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]


state 156

    (45) bgp -> LKEY join_block . RKEY
    (29) pjoin_block -> LKEY join_block . RKEY
    (30) pjoin_block -> join_block .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 194
    UNION           reduce using rule 30 (pjoin_block -> join_block .)
    POINT           reduce using rule 30 (pjoin_block -> join_block .)
    LKEY            reduce using rule 30 (pjoin_block -> join_block .)
    FILTER          reduce using rule 30 (pjoin_block -> join_block .)
    OPTIONAL        reduce using rule 30 (pjoin_block -> join_block .)
    VARIABLE        reduce using rule 30 (pjoin_block -> join_block .)
    ID              reduce using rule 30 (pjoin_block -> join_block .)
    URI             reduce using rule 30 (pjoin_block -> join_block .)

  ! RKEY            [ reduce using rule 30 (pjoin_block -> join_block .) ]


state 157

    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (34) join_block -> LKEY . union_block RKEY rest_join_block
    (29) pjoin_block -> LKEY . join_block RKEY
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (122) triple -> . subject predicate object
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (4) empty -> .
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 157
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    join_block                     shift and go to state 156
    uri                            shift and go to state 92
    bgp                            shift and go to state 146
    union_block                    shift and go to state 114
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 158

    (39) bgp -> LKEY bgp UNION . bgp rest_union_block RKEY
    (40) bgp -> bgp UNION . bgp rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 106
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    uri                            shift and go to state 92
    bgp                            shift and go to state 195
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 159

    (48) expression -> LPAR . expression RPAR
    (51) express_rel -> LPAR . express_rel RPAR
    (67) express_arg -> LPAR . express_arg RPAR
    (46) expression -> . express_rel LOGOP expression
    (47) expression -> . express_rel
    (48) expression -> . LPAR expression RPAR
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 159
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 161
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 160
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135
    expression                     shift and go to state 196

state 160

    (67) express_arg -> LPAR express_arg . RPAR
    (49) express_rel -> express_arg . RELOP express_rel
    (50) express_rel -> express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 197
    AND             reduce using rule 50 (express_rel -> express_arg .)
    OR              reduce using rule 50 (express_rel -> express_arg .)
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175

  ! RPAR            [ reduce using rule 50 (express_rel -> express_arg .) ]

    RELOP                          shift and go to state 167
    ARITOP                         shift and go to state 174

state 161

    (51) express_rel -> LPAR express_rel . RPAR
    (46) expression -> express_rel . LOGOP expression
    (47) expression -> express_rel .
    (75) LOGOP -> . AND
    (76) LOGOP -> . OR

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 200
    AND             shift and go to state 198
    OR              shift and go to state 201

  ! RPAR            [ reduce using rule 47 (expression -> express_rel .) ]

    LOGOP                          shift and go to state 199

state 162

    (42) bgp -> FILTER LPAR expression . RPAR

    RPAR            shift and go to state 202


state 163

    (52) express_rel -> NEG LPAR . expression RPAR
    (51) express_rel -> LPAR . express_rel RPAR
    (67) express_arg -> LPAR . express_arg RPAR
    (46) expression -> . express_rel LOGOP expression
    (47) expression -> . express_rel
    (48) expression -> . LPAR expression RPAR
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 159
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 161
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 160
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135
    expression                     shift and go to state 203

state 164

    (53) express_rel -> NEG express_rel .

    UNION           reduce using rule 53 (express_rel -> NEG express_rel .)
    POINT           reduce using rule 53 (express_rel -> NEG express_rel .)
    LKEY            reduce using rule 53 (express_rel -> NEG express_rel .)
    FILTER          reduce using rule 53 (express_rel -> NEG express_rel .)
    OPTIONAL        reduce using rule 53 (express_rel -> NEG express_rel .)
    VARIABLE        reduce using rule 53 (express_rel -> NEG express_rel .)
    ID              reduce using rule 53 (express_rel -> NEG express_rel .)
    URI             reduce using rule 53 (express_rel -> NEG express_rel .)
    RKEY            reduce using rule 53 (express_rel -> NEG express_rel .)
    RPAR            reduce using rule 53 (express_rel -> NEG express_rel .)
    AND             reduce using rule 53 (express_rel -> NEG express_rel .)
    OR              reduce using rule 53 (express_rel -> NEG express_rel .)


state 165

    (58) express_arg -> NUMBER POINT . NUMBER

    NUMBER          shift and go to state 204


state 166

    (63) express_arg -> binary_func LPAR . express_arg COMA express_arg RPAR
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 205
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 167

    (49) express_rel -> express_arg RELOP . express_rel
    (68) express_arg -> express_arg RELOP . express_arg
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 206
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 208
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 207
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135

state 168

    (78) RELOP -> LESS .

    VARIABLE        reduce using rule 78 (RELOP -> LESS .)
    CONSTANT        reduce using rule 78 (RELOP -> LESS .)
    NUMBER          reduce using rule 78 (RELOP -> LESS .)
    REGEX           reduce using rule 78 (RELOP -> LESS .)
    LPAR            reduce using rule 78 (RELOP -> LESS .)
    ID              reduce using rule 78 (RELOP -> LESS .)
    URI             reduce using rule 78 (RELOP -> LESS .)
    SAMETERM        reduce using rule 78 (RELOP -> LESS .)
    LANGMATCHES     reduce using rule 78 (RELOP -> LESS .)
    CONTAINS        reduce using rule 78 (RELOP -> LESS .)
    BOUND           reduce using rule 78 (RELOP -> LESS .)
    ISIRI           reduce using rule 78 (RELOP -> LESS .)
    ISURI           reduce using rule 78 (RELOP -> LESS .)
    ISBLANK         reduce using rule 78 (RELOP -> LESS .)
    ISLITERAL       reduce using rule 78 (RELOP -> LESS .)
    LANG            reduce using rule 78 (RELOP -> LESS .)
    DATATYPE        reduce using rule 78 (RELOP -> LESS .)
    STR             reduce using rule 78 (RELOP -> LESS .)
    UPPERCASE       reduce using rule 78 (RELOP -> LESS .)
    DOUBLE          reduce using rule 78 (RELOP -> LESS .)
    INTEGER         reduce using rule 78 (RELOP -> LESS .)
    DECIMAL         reduce using rule 78 (RELOP -> LESS .)
    FLOAT           reduce using rule 78 (RELOP -> LESS .)
    STRING          reduce using rule 78 (RELOP -> LESS .)
    BOOLEAN         reduce using rule 78 (RELOP -> LESS .)
    DATETIME        reduce using rule 78 (RELOP -> LESS .)
    NONPOSINT       reduce using rule 78 (RELOP -> LESS .)
    NEGATIVEINT     reduce using rule 78 (RELOP -> LESS .)
    LONG            reduce using rule 78 (RELOP -> LESS .)
    INT             reduce using rule 78 (RELOP -> LESS .)
    SHORT           reduce using rule 78 (RELOP -> LESS .)
    BYTE            reduce using rule 78 (RELOP -> LESS .)
    NONNEGINT       reduce using rule 78 (RELOP -> LESS .)
    UNSIGNEDLONG    reduce using rule 78 (RELOP -> LESS .)
    UNSIGNEDINT     reduce using rule 78 (RELOP -> LESS .)
    UNSIGNEDSHORT   reduce using rule 78 (RELOP -> LESS .)
    UNSIGNEDBYTE    reduce using rule 78 (RELOP -> LESS .)
    POSITIVEINT     reduce using rule 78 (RELOP -> LESS .)
    UCASE           reduce using rule 78 (RELOP -> LESS .)
    LCASE           reduce using rule 78 (RELOP -> LESS .)
    PLUS            reduce using rule 78 (RELOP -> LESS .)
    MINUS           reduce using rule 78 (RELOP -> LESS .)
    NEG             reduce using rule 78 (RELOP -> LESS .)


state 169

    (77) RELOP -> EQUALS .

    VARIABLE        reduce using rule 77 (RELOP -> EQUALS .)
    CONSTANT        reduce using rule 77 (RELOP -> EQUALS .)
    NUMBER          reduce using rule 77 (RELOP -> EQUALS .)
    REGEX           reduce using rule 77 (RELOP -> EQUALS .)
    LPAR            reduce using rule 77 (RELOP -> EQUALS .)
    ID              reduce using rule 77 (RELOP -> EQUALS .)
    URI             reduce using rule 77 (RELOP -> EQUALS .)
    SAMETERM        reduce using rule 77 (RELOP -> EQUALS .)
    LANGMATCHES     reduce using rule 77 (RELOP -> EQUALS .)
    CONTAINS        reduce using rule 77 (RELOP -> EQUALS .)
    BOUND           reduce using rule 77 (RELOP -> EQUALS .)
    ISIRI           reduce using rule 77 (RELOP -> EQUALS .)
    ISURI           reduce using rule 77 (RELOP -> EQUALS .)
    ISBLANK         reduce using rule 77 (RELOP -> EQUALS .)
    ISLITERAL       reduce using rule 77 (RELOP -> EQUALS .)
    LANG            reduce using rule 77 (RELOP -> EQUALS .)
    DATATYPE        reduce using rule 77 (RELOP -> EQUALS .)
    STR             reduce using rule 77 (RELOP -> EQUALS .)
    UPPERCASE       reduce using rule 77 (RELOP -> EQUALS .)
    DOUBLE          reduce using rule 77 (RELOP -> EQUALS .)
    INTEGER         reduce using rule 77 (RELOP -> EQUALS .)
    DECIMAL         reduce using rule 77 (RELOP -> EQUALS .)
    FLOAT           reduce using rule 77 (RELOP -> EQUALS .)
    STRING          reduce using rule 77 (RELOP -> EQUALS .)
    BOOLEAN         reduce using rule 77 (RELOP -> EQUALS .)
    DATETIME        reduce using rule 77 (RELOP -> EQUALS .)
    NONPOSINT       reduce using rule 77 (RELOP -> EQUALS .)
    NEGATIVEINT     reduce using rule 77 (RELOP -> EQUALS .)
    LONG            reduce using rule 77 (RELOP -> EQUALS .)
    INT             reduce using rule 77 (RELOP -> EQUALS .)
    SHORT           reduce using rule 77 (RELOP -> EQUALS .)
    BYTE            reduce using rule 77 (RELOP -> EQUALS .)
    NONNEGINT       reduce using rule 77 (RELOP -> EQUALS .)
    UNSIGNEDLONG    reduce using rule 77 (RELOP -> EQUALS .)
    UNSIGNEDINT     reduce using rule 77 (RELOP -> EQUALS .)
    UNSIGNEDSHORT   reduce using rule 77 (RELOP -> EQUALS .)
    UNSIGNEDBYTE    reduce using rule 77 (RELOP -> EQUALS .)
    POSITIVEINT     reduce using rule 77 (RELOP -> EQUALS .)
    UCASE           reduce using rule 77 (RELOP -> EQUALS .)
    LCASE           reduce using rule 77 (RELOP -> EQUALS .)
    PLUS            reduce using rule 77 (RELOP -> EQUALS .)
    MINUS           reduce using rule 77 (RELOP -> EQUALS .)
    NEG             reduce using rule 77 (RELOP -> EQUALS .)


state 170

    (70) ARITOP -> MINUS .

    VARIABLE        reduce using rule 70 (ARITOP -> MINUS .)
    CONSTANT        reduce using rule 70 (ARITOP -> MINUS .)
    NUMBER          reduce using rule 70 (ARITOP -> MINUS .)
    REGEX           reduce using rule 70 (ARITOP -> MINUS .)
    LPAR            reduce using rule 70 (ARITOP -> MINUS .)
    ID              reduce using rule 70 (ARITOP -> MINUS .)
    URI             reduce using rule 70 (ARITOP -> MINUS .)
    SAMETERM        reduce using rule 70 (ARITOP -> MINUS .)
    LANGMATCHES     reduce using rule 70 (ARITOP -> MINUS .)
    CONTAINS        reduce using rule 70 (ARITOP -> MINUS .)
    BOUND           reduce using rule 70 (ARITOP -> MINUS .)
    ISIRI           reduce using rule 70 (ARITOP -> MINUS .)
    ISURI           reduce using rule 70 (ARITOP -> MINUS .)
    ISBLANK         reduce using rule 70 (ARITOP -> MINUS .)
    ISLITERAL       reduce using rule 70 (ARITOP -> MINUS .)
    LANG            reduce using rule 70 (ARITOP -> MINUS .)
    DATATYPE        reduce using rule 70 (ARITOP -> MINUS .)
    STR             reduce using rule 70 (ARITOP -> MINUS .)
    UPPERCASE       reduce using rule 70 (ARITOP -> MINUS .)
    DOUBLE          reduce using rule 70 (ARITOP -> MINUS .)
    INTEGER         reduce using rule 70 (ARITOP -> MINUS .)
    DECIMAL         reduce using rule 70 (ARITOP -> MINUS .)
    FLOAT           reduce using rule 70 (ARITOP -> MINUS .)
    STRING          reduce using rule 70 (ARITOP -> MINUS .)
    BOOLEAN         reduce using rule 70 (ARITOP -> MINUS .)
    DATETIME        reduce using rule 70 (ARITOP -> MINUS .)
    NONPOSINT       reduce using rule 70 (ARITOP -> MINUS .)
    NEGATIVEINT     reduce using rule 70 (ARITOP -> MINUS .)
    LONG            reduce using rule 70 (ARITOP -> MINUS .)
    INT             reduce using rule 70 (ARITOP -> MINUS .)
    SHORT           reduce using rule 70 (ARITOP -> MINUS .)
    BYTE            reduce using rule 70 (ARITOP -> MINUS .)
    NONNEGINT       reduce using rule 70 (ARITOP -> MINUS .)
    UNSIGNEDLONG    reduce using rule 70 (ARITOP -> MINUS .)
    UNSIGNEDINT     reduce using rule 70 (ARITOP -> MINUS .)
    UNSIGNEDSHORT   reduce using rule 70 (ARITOP -> MINUS .)
    UNSIGNEDBYTE    reduce using rule 70 (ARITOP -> MINUS .)
    POSITIVEINT     reduce using rule 70 (ARITOP -> MINUS .)
    UCASE           reduce using rule 70 (ARITOP -> MINUS .)
    LCASE           reduce using rule 70 (ARITOP -> MINUS .)
    PLUS            reduce using rule 70 (ARITOP -> MINUS .)
    MINUS           reduce using rule 70 (ARITOP -> MINUS .)


state 171

    (81) RELOP -> GREATEREQ .

    VARIABLE        reduce using rule 81 (RELOP -> GREATEREQ .)
    CONSTANT        reduce using rule 81 (RELOP -> GREATEREQ .)
    NUMBER          reduce using rule 81 (RELOP -> GREATEREQ .)
    REGEX           reduce using rule 81 (RELOP -> GREATEREQ .)
    LPAR            reduce using rule 81 (RELOP -> GREATEREQ .)
    ID              reduce using rule 81 (RELOP -> GREATEREQ .)
    URI             reduce using rule 81 (RELOP -> GREATEREQ .)
    SAMETERM        reduce using rule 81 (RELOP -> GREATEREQ .)
    LANGMATCHES     reduce using rule 81 (RELOP -> GREATEREQ .)
    CONTAINS        reduce using rule 81 (RELOP -> GREATEREQ .)
    BOUND           reduce using rule 81 (RELOP -> GREATEREQ .)
    ISIRI           reduce using rule 81 (RELOP -> GREATEREQ .)
    ISURI           reduce using rule 81 (RELOP -> GREATEREQ .)
    ISBLANK         reduce using rule 81 (RELOP -> GREATEREQ .)
    ISLITERAL       reduce using rule 81 (RELOP -> GREATEREQ .)
    LANG            reduce using rule 81 (RELOP -> GREATEREQ .)
    DATATYPE        reduce using rule 81 (RELOP -> GREATEREQ .)
    STR             reduce using rule 81 (RELOP -> GREATEREQ .)
    UPPERCASE       reduce using rule 81 (RELOP -> GREATEREQ .)
    DOUBLE          reduce using rule 81 (RELOP -> GREATEREQ .)
    INTEGER         reduce using rule 81 (RELOP -> GREATEREQ .)
    DECIMAL         reduce using rule 81 (RELOP -> GREATEREQ .)
    FLOAT           reduce using rule 81 (RELOP -> GREATEREQ .)
    STRING          reduce using rule 81 (RELOP -> GREATEREQ .)
    BOOLEAN         reduce using rule 81 (RELOP -> GREATEREQ .)
    DATETIME        reduce using rule 81 (RELOP -> GREATEREQ .)
    NONPOSINT       reduce using rule 81 (RELOP -> GREATEREQ .)
    NEGATIVEINT     reduce using rule 81 (RELOP -> GREATEREQ .)
    LONG            reduce using rule 81 (RELOP -> GREATEREQ .)
    INT             reduce using rule 81 (RELOP -> GREATEREQ .)
    SHORT           reduce using rule 81 (RELOP -> GREATEREQ .)
    BYTE            reduce using rule 81 (RELOP -> GREATEREQ .)
    NONNEGINT       reduce using rule 81 (RELOP -> GREATEREQ .)
    UNSIGNEDLONG    reduce using rule 81 (RELOP -> GREATEREQ .)
    UNSIGNEDINT     reduce using rule 81 (RELOP -> GREATEREQ .)
    UNSIGNEDSHORT   reduce using rule 81 (RELOP -> GREATEREQ .)
    UNSIGNEDBYTE    reduce using rule 81 (RELOP -> GREATEREQ .)
    POSITIVEINT     reduce using rule 81 (RELOP -> GREATEREQ .)
    UCASE           reduce using rule 81 (RELOP -> GREATEREQ .)
    LCASE           reduce using rule 81 (RELOP -> GREATEREQ .)
    PLUS            reduce using rule 81 (RELOP -> GREATEREQ .)
    MINUS           reduce using rule 81 (RELOP -> GREATEREQ .)
    NEG             reduce using rule 81 (RELOP -> GREATEREQ .)


state 172

    (79) RELOP -> LESSEQ .

    VARIABLE        reduce using rule 79 (RELOP -> LESSEQ .)
    CONSTANT        reduce using rule 79 (RELOP -> LESSEQ .)
    NUMBER          reduce using rule 79 (RELOP -> LESSEQ .)
    REGEX           reduce using rule 79 (RELOP -> LESSEQ .)
    LPAR            reduce using rule 79 (RELOP -> LESSEQ .)
    ID              reduce using rule 79 (RELOP -> LESSEQ .)
    URI             reduce using rule 79 (RELOP -> LESSEQ .)
    SAMETERM        reduce using rule 79 (RELOP -> LESSEQ .)
    LANGMATCHES     reduce using rule 79 (RELOP -> LESSEQ .)
    CONTAINS        reduce using rule 79 (RELOP -> LESSEQ .)
    BOUND           reduce using rule 79 (RELOP -> LESSEQ .)
    ISIRI           reduce using rule 79 (RELOP -> LESSEQ .)
    ISURI           reduce using rule 79 (RELOP -> LESSEQ .)
    ISBLANK         reduce using rule 79 (RELOP -> LESSEQ .)
    ISLITERAL       reduce using rule 79 (RELOP -> LESSEQ .)
    LANG            reduce using rule 79 (RELOP -> LESSEQ .)
    DATATYPE        reduce using rule 79 (RELOP -> LESSEQ .)
    STR             reduce using rule 79 (RELOP -> LESSEQ .)
    UPPERCASE       reduce using rule 79 (RELOP -> LESSEQ .)
    DOUBLE          reduce using rule 79 (RELOP -> LESSEQ .)
    INTEGER         reduce using rule 79 (RELOP -> LESSEQ .)
    DECIMAL         reduce using rule 79 (RELOP -> LESSEQ .)
    FLOAT           reduce using rule 79 (RELOP -> LESSEQ .)
    STRING          reduce using rule 79 (RELOP -> LESSEQ .)
    BOOLEAN         reduce using rule 79 (RELOP -> LESSEQ .)
    DATETIME        reduce using rule 79 (RELOP -> LESSEQ .)
    NONPOSINT       reduce using rule 79 (RELOP -> LESSEQ .)
    NEGATIVEINT     reduce using rule 79 (RELOP -> LESSEQ .)
    LONG            reduce using rule 79 (RELOP -> LESSEQ .)
    INT             reduce using rule 79 (RELOP -> LESSEQ .)
    SHORT           reduce using rule 79 (RELOP -> LESSEQ .)
    BYTE            reduce using rule 79 (RELOP -> LESSEQ .)
    NONNEGINT       reduce using rule 79 (RELOP -> LESSEQ .)
    UNSIGNEDLONG    reduce using rule 79 (RELOP -> LESSEQ .)
    UNSIGNEDINT     reduce using rule 79 (RELOP -> LESSEQ .)
    UNSIGNEDSHORT   reduce using rule 79 (RELOP -> LESSEQ .)
    UNSIGNEDBYTE    reduce using rule 79 (RELOP -> LESSEQ .)
    POSITIVEINT     reduce using rule 79 (RELOP -> LESSEQ .)
    UCASE           reduce using rule 79 (RELOP -> LESSEQ .)
    LCASE           reduce using rule 79 (RELOP -> LESSEQ .)
    PLUS            reduce using rule 79 (RELOP -> LESSEQ .)
    MINUS           reduce using rule 79 (RELOP -> LESSEQ .)
    NEG             reduce using rule 79 (RELOP -> LESSEQ .)


state 173

    (69) ARITOP -> PLUS .

    VARIABLE        reduce using rule 69 (ARITOP -> PLUS .)
    CONSTANT        reduce using rule 69 (ARITOP -> PLUS .)
    NUMBER          reduce using rule 69 (ARITOP -> PLUS .)
    REGEX           reduce using rule 69 (ARITOP -> PLUS .)
    LPAR            reduce using rule 69 (ARITOP -> PLUS .)
    ID              reduce using rule 69 (ARITOP -> PLUS .)
    URI             reduce using rule 69 (ARITOP -> PLUS .)
    SAMETERM        reduce using rule 69 (ARITOP -> PLUS .)
    LANGMATCHES     reduce using rule 69 (ARITOP -> PLUS .)
    CONTAINS        reduce using rule 69 (ARITOP -> PLUS .)
    BOUND           reduce using rule 69 (ARITOP -> PLUS .)
    ISIRI           reduce using rule 69 (ARITOP -> PLUS .)
    ISURI           reduce using rule 69 (ARITOP -> PLUS .)
    ISBLANK         reduce using rule 69 (ARITOP -> PLUS .)
    ISLITERAL       reduce using rule 69 (ARITOP -> PLUS .)
    LANG            reduce using rule 69 (ARITOP -> PLUS .)
    DATATYPE        reduce using rule 69 (ARITOP -> PLUS .)
    STR             reduce using rule 69 (ARITOP -> PLUS .)
    UPPERCASE       reduce using rule 69 (ARITOP -> PLUS .)
    DOUBLE          reduce using rule 69 (ARITOP -> PLUS .)
    INTEGER         reduce using rule 69 (ARITOP -> PLUS .)
    DECIMAL         reduce using rule 69 (ARITOP -> PLUS .)
    FLOAT           reduce using rule 69 (ARITOP -> PLUS .)
    STRING          reduce using rule 69 (ARITOP -> PLUS .)
    BOOLEAN         reduce using rule 69 (ARITOP -> PLUS .)
    DATETIME        reduce using rule 69 (ARITOP -> PLUS .)
    NONPOSINT       reduce using rule 69 (ARITOP -> PLUS .)
    NEGATIVEINT     reduce using rule 69 (ARITOP -> PLUS .)
    LONG            reduce using rule 69 (ARITOP -> PLUS .)
    INT             reduce using rule 69 (ARITOP -> PLUS .)
    SHORT           reduce using rule 69 (ARITOP -> PLUS .)
    BYTE            reduce using rule 69 (ARITOP -> PLUS .)
    NONNEGINT       reduce using rule 69 (ARITOP -> PLUS .)
    UNSIGNEDLONG    reduce using rule 69 (ARITOP -> PLUS .)
    UNSIGNEDINT     reduce using rule 69 (ARITOP -> PLUS .)
    UNSIGNEDSHORT   reduce using rule 69 (ARITOP -> PLUS .)
    UNSIGNEDBYTE    reduce using rule 69 (ARITOP -> PLUS .)
    POSITIVEINT     reduce using rule 69 (ARITOP -> PLUS .)
    UCASE           reduce using rule 69 (ARITOP -> PLUS .)
    LCASE           reduce using rule 69 (ARITOP -> PLUS .)
    PLUS            reduce using rule 69 (ARITOP -> PLUS .)
    MINUS           reduce using rule 69 (ARITOP -> PLUS .)


state 174

    (66) express_arg -> express_arg ARITOP . express_arg
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 209
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 175

    (72) ARITOP -> DIV .

    VARIABLE        reduce using rule 72 (ARITOP -> DIV .)
    CONSTANT        reduce using rule 72 (ARITOP -> DIV .)
    NUMBER          reduce using rule 72 (ARITOP -> DIV .)
    REGEX           reduce using rule 72 (ARITOP -> DIV .)
    LPAR            reduce using rule 72 (ARITOP -> DIV .)
    ID              reduce using rule 72 (ARITOP -> DIV .)
    URI             reduce using rule 72 (ARITOP -> DIV .)
    SAMETERM        reduce using rule 72 (ARITOP -> DIV .)
    LANGMATCHES     reduce using rule 72 (ARITOP -> DIV .)
    CONTAINS        reduce using rule 72 (ARITOP -> DIV .)
    BOUND           reduce using rule 72 (ARITOP -> DIV .)
    ISIRI           reduce using rule 72 (ARITOP -> DIV .)
    ISURI           reduce using rule 72 (ARITOP -> DIV .)
    ISBLANK         reduce using rule 72 (ARITOP -> DIV .)
    ISLITERAL       reduce using rule 72 (ARITOP -> DIV .)
    LANG            reduce using rule 72 (ARITOP -> DIV .)
    DATATYPE        reduce using rule 72 (ARITOP -> DIV .)
    STR             reduce using rule 72 (ARITOP -> DIV .)
    UPPERCASE       reduce using rule 72 (ARITOP -> DIV .)
    DOUBLE          reduce using rule 72 (ARITOP -> DIV .)
    INTEGER         reduce using rule 72 (ARITOP -> DIV .)
    DECIMAL         reduce using rule 72 (ARITOP -> DIV .)
    FLOAT           reduce using rule 72 (ARITOP -> DIV .)
    STRING          reduce using rule 72 (ARITOP -> DIV .)
    BOOLEAN         reduce using rule 72 (ARITOP -> DIV .)
    DATETIME        reduce using rule 72 (ARITOP -> DIV .)
    NONPOSINT       reduce using rule 72 (ARITOP -> DIV .)
    NEGATIVEINT     reduce using rule 72 (ARITOP -> DIV .)
    LONG            reduce using rule 72 (ARITOP -> DIV .)
    INT             reduce using rule 72 (ARITOP -> DIV .)
    SHORT           reduce using rule 72 (ARITOP -> DIV .)
    BYTE            reduce using rule 72 (ARITOP -> DIV .)
    NONNEGINT       reduce using rule 72 (ARITOP -> DIV .)
    UNSIGNEDLONG    reduce using rule 72 (ARITOP -> DIV .)
    UNSIGNEDINT     reduce using rule 72 (ARITOP -> DIV .)
    UNSIGNEDSHORT   reduce using rule 72 (ARITOP -> DIV .)
    UNSIGNEDBYTE    reduce using rule 72 (ARITOP -> DIV .)
    POSITIVEINT     reduce using rule 72 (ARITOP -> DIV .)
    UCASE           reduce using rule 72 (ARITOP -> DIV .)
    LCASE           reduce using rule 72 (ARITOP -> DIV .)
    PLUS            reduce using rule 72 (ARITOP -> DIV .)
    MINUS           reduce using rule 72 (ARITOP -> DIV .)


state 176

    (71) ARITOP -> TIMES .

    VARIABLE        reduce using rule 71 (ARITOP -> TIMES .)
    CONSTANT        reduce using rule 71 (ARITOP -> TIMES .)
    NUMBER          reduce using rule 71 (ARITOP -> TIMES .)
    REGEX           reduce using rule 71 (ARITOP -> TIMES .)
    LPAR            reduce using rule 71 (ARITOP -> TIMES .)
    ID              reduce using rule 71 (ARITOP -> TIMES .)
    URI             reduce using rule 71 (ARITOP -> TIMES .)
    SAMETERM        reduce using rule 71 (ARITOP -> TIMES .)
    LANGMATCHES     reduce using rule 71 (ARITOP -> TIMES .)
    CONTAINS        reduce using rule 71 (ARITOP -> TIMES .)
    BOUND           reduce using rule 71 (ARITOP -> TIMES .)
    ISIRI           reduce using rule 71 (ARITOP -> TIMES .)
    ISURI           reduce using rule 71 (ARITOP -> TIMES .)
    ISBLANK         reduce using rule 71 (ARITOP -> TIMES .)
    ISLITERAL       reduce using rule 71 (ARITOP -> TIMES .)
    LANG            reduce using rule 71 (ARITOP -> TIMES .)
    DATATYPE        reduce using rule 71 (ARITOP -> TIMES .)
    STR             reduce using rule 71 (ARITOP -> TIMES .)
    UPPERCASE       reduce using rule 71 (ARITOP -> TIMES .)
    DOUBLE          reduce using rule 71 (ARITOP -> TIMES .)
    INTEGER         reduce using rule 71 (ARITOP -> TIMES .)
    DECIMAL         reduce using rule 71 (ARITOP -> TIMES .)
    FLOAT           reduce using rule 71 (ARITOP -> TIMES .)
    STRING          reduce using rule 71 (ARITOP -> TIMES .)
    BOOLEAN         reduce using rule 71 (ARITOP -> TIMES .)
    DATETIME        reduce using rule 71 (ARITOP -> TIMES .)
    NONPOSINT       reduce using rule 71 (ARITOP -> TIMES .)
    NEGATIVEINT     reduce using rule 71 (ARITOP -> TIMES .)
    LONG            reduce using rule 71 (ARITOP -> TIMES .)
    INT             reduce using rule 71 (ARITOP -> TIMES .)
    SHORT           reduce using rule 71 (ARITOP -> TIMES .)
    BYTE            reduce using rule 71 (ARITOP -> TIMES .)
    NONNEGINT       reduce using rule 71 (ARITOP -> TIMES .)
    UNSIGNEDLONG    reduce using rule 71 (ARITOP -> TIMES .)
    UNSIGNEDINT     reduce using rule 71 (ARITOP -> TIMES .)
    UNSIGNEDSHORT   reduce using rule 71 (ARITOP -> TIMES .)
    UNSIGNEDBYTE    reduce using rule 71 (ARITOP -> TIMES .)
    POSITIVEINT     reduce using rule 71 (ARITOP -> TIMES .)
    UCASE           reduce using rule 71 (ARITOP -> TIMES .)
    LCASE           reduce using rule 71 (ARITOP -> TIMES .)
    PLUS            reduce using rule 71 (ARITOP -> TIMES .)
    MINUS           reduce using rule 71 (ARITOP -> TIMES .)


state 177

    (82) RELOP -> NEQUALS .

    VARIABLE        reduce using rule 82 (RELOP -> NEQUALS .)
    CONSTANT        reduce using rule 82 (RELOP -> NEQUALS .)
    NUMBER          reduce using rule 82 (RELOP -> NEQUALS .)
    REGEX           reduce using rule 82 (RELOP -> NEQUALS .)
    LPAR            reduce using rule 82 (RELOP -> NEQUALS .)
    ID              reduce using rule 82 (RELOP -> NEQUALS .)
    URI             reduce using rule 82 (RELOP -> NEQUALS .)
    SAMETERM        reduce using rule 82 (RELOP -> NEQUALS .)
    LANGMATCHES     reduce using rule 82 (RELOP -> NEQUALS .)
    CONTAINS        reduce using rule 82 (RELOP -> NEQUALS .)
    BOUND           reduce using rule 82 (RELOP -> NEQUALS .)
    ISIRI           reduce using rule 82 (RELOP -> NEQUALS .)
    ISURI           reduce using rule 82 (RELOP -> NEQUALS .)
    ISBLANK         reduce using rule 82 (RELOP -> NEQUALS .)
    ISLITERAL       reduce using rule 82 (RELOP -> NEQUALS .)
    LANG            reduce using rule 82 (RELOP -> NEQUALS .)
    DATATYPE        reduce using rule 82 (RELOP -> NEQUALS .)
    STR             reduce using rule 82 (RELOP -> NEQUALS .)
    UPPERCASE       reduce using rule 82 (RELOP -> NEQUALS .)
    DOUBLE          reduce using rule 82 (RELOP -> NEQUALS .)
    INTEGER         reduce using rule 82 (RELOP -> NEQUALS .)
    DECIMAL         reduce using rule 82 (RELOP -> NEQUALS .)
    FLOAT           reduce using rule 82 (RELOP -> NEQUALS .)
    STRING          reduce using rule 82 (RELOP -> NEQUALS .)
    BOOLEAN         reduce using rule 82 (RELOP -> NEQUALS .)
    DATETIME        reduce using rule 82 (RELOP -> NEQUALS .)
    NONPOSINT       reduce using rule 82 (RELOP -> NEQUALS .)
    NEGATIVEINT     reduce using rule 82 (RELOP -> NEQUALS .)
    LONG            reduce using rule 82 (RELOP -> NEQUALS .)
    INT             reduce using rule 82 (RELOP -> NEQUALS .)
    SHORT           reduce using rule 82 (RELOP -> NEQUALS .)
    BYTE            reduce using rule 82 (RELOP -> NEQUALS .)
    NONNEGINT       reduce using rule 82 (RELOP -> NEQUALS .)
    UNSIGNEDLONG    reduce using rule 82 (RELOP -> NEQUALS .)
    UNSIGNEDINT     reduce using rule 82 (RELOP -> NEQUALS .)
    UNSIGNEDSHORT   reduce using rule 82 (RELOP -> NEQUALS .)
    UNSIGNEDBYTE    reduce using rule 82 (RELOP -> NEQUALS .)
    POSITIVEINT     reduce using rule 82 (RELOP -> NEQUALS .)
    UCASE           reduce using rule 82 (RELOP -> NEQUALS .)
    LCASE           reduce using rule 82 (RELOP -> NEQUALS .)
    PLUS            reduce using rule 82 (RELOP -> NEQUALS .)
    MINUS           reduce using rule 82 (RELOP -> NEQUALS .)
    NEG             reduce using rule 82 (RELOP -> NEQUALS .)


state 178

    (80) RELOP -> GREATER .

    VARIABLE        reduce using rule 80 (RELOP -> GREATER .)
    CONSTANT        reduce using rule 80 (RELOP -> GREATER .)
    NUMBER          reduce using rule 80 (RELOP -> GREATER .)
    REGEX           reduce using rule 80 (RELOP -> GREATER .)
    LPAR            reduce using rule 80 (RELOP -> GREATER .)
    ID              reduce using rule 80 (RELOP -> GREATER .)
    URI             reduce using rule 80 (RELOP -> GREATER .)
    SAMETERM        reduce using rule 80 (RELOP -> GREATER .)
    LANGMATCHES     reduce using rule 80 (RELOP -> GREATER .)
    CONTAINS        reduce using rule 80 (RELOP -> GREATER .)
    BOUND           reduce using rule 80 (RELOP -> GREATER .)
    ISIRI           reduce using rule 80 (RELOP -> GREATER .)
    ISURI           reduce using rule 80 (RELOP -> GREATER .)
    ISBLANK         reduce using rule 80 (RELOP -> GREATER .)
    ISLITERAL       reduce using rule 80 (RELOP -> GREATER .)
    LANG            reduce using rule 80 (RELOP -> GREATER .)
    DATATYPE        reduce using rule 80 (RELOP -> GREATER .)
    STR             reduce using rule 80 (RELOP -> GREATER .)
    UPPERCASE       reduce using rule 80 (RELOP -> GREATER .)
    DOUBLE          reduce using rule 80 (RELOP -> GREATER .)
    INTEGER         reduce using rule 80 (RELOP -> GREATER .)
    DECIMAL         reduce using rule 80 (RELOP -> GREATER .)
    FLOAT           reduce using rule 80 (RELOP -> GREATER .)
    STRING          reduce using rule 80 (RELOP -> GREATER .)
    BOOLEAN         reduce using rule 80 (RELOP -> GREATER .)
    DATETIME        reduce using rule 80 (RELOP -> GREATER .)
    NONPOSINT       reduce using rule 80 (RELOP -> GREATER .)
    NEGATIVEINT     reduce using rule 80 (RELOP -> GREATER .)
    LONG            reduce using rule 80 (RELOP -> GREATER .)
    INT             reduce using rule 80 (RELOP -> GREATER .)
    SHORT           reduce using rule 80 (RELOP -> GREATER .)
    BYTE            reduce using rule 80 (RELOP -> GREATER .)
    NONNEGINT       reduce using rule 80 (RELOP -> GREATER .)
    UNSIGNEDLONG    reduce using rule 80 (RELOP -> GREATER .)
    UNSIGNEDINT     reduce using rule 80 (RELOP -> GREATER .)
    UNSIGNEDSHORT   reduce using rule 80 (RELOP -> GREATER .)
    UNSIGNEDBYTE    reduce using rule 80 (RELOP -> GREATER .)
    POSITIVEINT     reduce using rule 80 (RELOP -> GREATER .)
    UCASE           reduce using rule 80 (RELOP -> GREATER .)
    LCASE           reduce using rule 80 (RELOP -> GREATER .)
    PLUS            reduce using rule 80 (RELOP -> GREATER .)
    MINUS           reduce using rule 80 (RELOP -> GREATER .)
    NEG             reduce using rule 80 (RELOP -> GREATER .)


state 179

    (59) express_arg -> REGEX LPAR . express_arg COMA pattern_arg regex_flag
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 210
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 180

    (6) uri -> ID COLON . ID
    (7) uri -> ID COLON . URI
    (116) unary_func -> ID COLON . ID

    ID              shift and go to state 211
    URI             shift and go to state 20


state 181

    (67) express_arg -> LPAR . express_arg RPAR
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 212
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 182

    (65) express_arg -> UNARYOP express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQ resolved as shift
  ! shift/reduce conflict for NEQUALS resolved as shift
    UNION           reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    POINT           reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    LKEY            reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    FILTER          reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    OPTIONAL        reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    VARIABLE        reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    ID              reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    URI             reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    RKEY            reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    RPAR            reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    AND             reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    OR              reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    COMA            reduce using rule 65 (express_arg -> UNARYOP express_arg .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

  ! EQUALS          [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! LESS            [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! LESSEQ          [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! GREATER         [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! GREATEREQ       [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! NEQUALS         [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! PLUS            [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! MINUS           [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! TIMES           [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]
  ! DIV             [ reduce using rule 65 (express_arg -> UNARYOP express_arg .) ]

    RELOP                          shift and go to state 213
    ARITOP                         shift and go to state 174

state 183

    (64) express_arg -> unary_func LPAR . express_arg RPAR
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 214
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 184

    (37) rest_join_block -> POINT bgp rest_join_block .

    RKEY            reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    UNION           reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    POINT           reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    LKEY            reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    FILTER          reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    OPTIONAL        reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    VARIABLE        reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    ID              reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)
    URI             reduce using rule 37 (rest_join_block -> POINT bgp rest_join_block .)


state 185

    (45) bgp -> LKEY join_block RKEY .

    UNION           reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    POINT           reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    LKEY            reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    FILTER          reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    OPTIONAL        reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    VARIABLE        reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    ID              reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    URI             reduce using rule 45 (bgp -> LKEY join_block RKEY .)
    RKEY            reduce using rule 45 (bgp -> LKEY join_block RKEY .)


state 186

    (45) bgp -> LKEY join_block . RKEY
    (30) pjoin_block -> join_block .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 185
    UNION           reduce using rule 30 (pjoin_block -> join_block .)
    POINT           reduce using rule 30 (pjoin_block -> join_block .)
    LKEY            reduce using rule 30 (pjoin_block -> join_block .)
    FILTER          reduce using rule 30 (pjoin_block -> join_block .)
    OPTIONAL        reduce using rule 30 (pjoin_block -> join_block .)
    VARIABLE        reduce using rule 30 (pjoin_block -> join_block .)
    ID              reduce using rule 30 (pjoin_block -> join_block .)
    URI             reduce using rule 30 (pjoin_block -> join_block .)

  ! RKEY            [ reduce using rule 30 (pjoin_block -> join_block .) ]


state 187

    (40) bgp -> bgp UNION . bgp rest_union_block
    (33) rest_union_block -> UNION . LKEY join_block rest_union_block RKEY rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 215
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    uri                            shift and go to state 92
    bgp                            shift and go to state 149
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 188

    (40) bgp -> bgp UNION bgp rest_union_block .

    UNION           reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    POINT           reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    LKEY            reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    FILTER          reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    OPTIONAL        reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    VARIABLE        reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    ID              reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    URI             reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    RKEY            reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)


state 189

    (44) bgp -> OPTIONAL LKEY group_graph_pattern RKEY .

    UNION           reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    POINT           reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    LKEY            reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    FILTER          reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    OPTIONAL        reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    VARIABLE        reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    ID              reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    URI             reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)
    RKEY            reduce using rule 44 (bgp -> OPTIONAL LKEY group_graph_pattern RKEY .)


state 190

    (33) rest_union_block -> UNION LKEY join_block . rest_union_block RKEY rest_union_block
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

    UNION           shift and go to state 111
    RKEY            reduce using rule 4 (empty -> .)

    rest_union_block               shift and go to state 216
    empty                          shift and go to state 113

state 191

    (34) join_block -> LKEY . union_block RKEY rest_join_block
    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (26) union_block -> . pjoin_block rest_union_block POINT pjoin_block
    (27) union_block -> . pjoin_block rest_union_block pjoin_block
    (28) union_block -> . pjoin_block rest_union_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (29) pjoin_block -> . LKEY join_block RKEY
    (30) pjoin_block -> . join_block
    (31) pjoin_block -> . empty
    (122) triple -> . subject predicate object
    (4) empty -> .
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for FILTER resolved as shift
  ! shift/reduce conflict for OPTIONAL resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for URI resolved as shift
    LKEY            shift and go to state 157
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    UNION           reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

  ! LKEY            [ reduce using rule 4 (empty -> .) ]
  ! FILTER          [ reduce using rule 4 (empty -> .) ]
  ! OPTIONAL        [ reduce using rule 4 (empty -> .) ]
  ! VARIABLE        [ reduce using rule 4 (empty -> .) ]
  ! ID              [ reduce using rule 4 (empty -> .) ]
  ! URI             [ reduce using rule 4 (empty -> .) ]

    bgp                            shift and go to state 146
    join_block                     shift and go to state 186
    uri                            shift and go to state 92
    pjoin_block                    shift and go to state 88
    triple                         shift and go to state 82
    union_block                    shift and go to state 114
    empty                          shift and go to state 89
    subject                        shift and go to state 83

state 192

    (26) union_block -> pjoin_block rest_union_block POINT pjoin_block .

    RKEY            reduce using rule 26 (union_block -> pjoin_block rest_union_block POINT pjoin_block .)


state 193

    (34) join_block -> LKEY union_block RKEY rest_join_block .

    RKEY            reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    UNION           reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    POINT           reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    LKEY            reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    FILTER          reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    OPTIONAL        reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    VARIABLE        reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    ID              reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)
    URI             reduce using rule 34 (join_block -> LKEY union_block RKEY rest_join_block .)


state 194

    (45) bgp -> LKEY join_block RKEY .
    (29) pjoin_block -> LKEY join_block RKEY .

  ! reduce/reduce conflict for UNION resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for POINT resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for LKEY resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for FILTER resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for OPTIONAL resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for ID resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for URI resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
  ! reduce/reduce conflict for RKEY resolved using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    UNION           reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    POINT           reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    LKEY            reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    FILTER          reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    OPTIONAL        reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    VARIABLE        reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    ID              reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    URI             reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)
    RKEY            reduce using rule 29 (pjoin_block -> LKEY join_block RKEY .)

  ! UNION           [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! POINT           [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! LKEY            [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! FILTER          [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! OPTIONAL        [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! VARIABLE        [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! ID              [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! URI             [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]
  ! RKEY            [ reduce using rule 45 (bgp -> LKEY join_block RKEY .) ]


state 195

    (39) bgp -> LKEY bgp UNION bgp . rest_union_block RKEY
    (40) bgp -> bgp UNION bgp . rest_union_block
    (40) bgp -> bgp . UNION bgp rest_union_block
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

  ! shift/reduce conflict for UNION resolved as shift
    UNION           shift and go to state 187
    RKEY            reduce using rule 4 (empty -> .)
    POINT           reduce using rule 4 (empty -> .)
    LKEY            reduce using rule 4 (empty -> .)
    FILTER          reduce using rule 4 (empty -> .)
    OPTIONAL        reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)
    URI             reduce using rule 4 (empty -> .)

  ! UNION           [ reduce using rule 4 (empty -> .) ]

    rest_union_block               shift and go to state 217
    empty                          shift and go to state 113

state 196

    (48) expression -> LPAR expression . RPAR

    RPAR            shift and go to state 218


state 197

    (67) express_arg -> LPAR express_arg RPAR .

    EQUALS          reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    LESS            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    LESSEQ          reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    GREATER         reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    GREATEREQ       reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    NEQUALS         reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    PLUS            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    MINUS           reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    TIMES           reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    DIV             reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    UNION           reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    POINT           reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    LKEY            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    FILTER          reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    OPTIONAL        reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    VARIABLE        reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    ID              reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    URI             reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    RKEY            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    RPAR            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    AND             reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    OR              reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)
    COMA            reduce using rule 67 (express_arg -> LPAR express_arg RPAR .)


state 198

    (75) LOGOP -> AND .

    LPAR            reduce using rule 75 (LOGOP -> AND .)
    NEG             reduce using rule 75 (LOGOP -> AND .)
    VARIABLE        reduce using rule 75 (LOGOP -> AND .)
    CONSTANT        reduce using rule 75 (LOGOP -> AND .)
    NUMBER          reduce using rule 75 (LOGOP -> AND .)
    REGEX           reduce using rule 75 (LOGOP -> AND .)
    ID              reduce using rule 75 (LOGOP -> AND .)
    URI             reduce using rule 75 (LOGOP -> AND .)
    SAMETERM        reduce using rule 75 (LOGOP -> AND .)
    LANGMATCHES     reduce using rule 75 (LOGOP -> AND .)
    CONTAINS        reduce using rule 75 (LOGOP -> AND .)
    BOUND           reduce using rule 75 (LOGOP -> AND .)
    ISIRI           reduce using rule 75 (LOGOP -> AND .)
    ISURI           reduce using rule 75 (LOGOP -> AND .)
    ISBLANK         reduce using rule 75 (LOGOP -> AND .)
    ISLITERAL       reduce using rule 75 (LOGOP -> AND .)
    LANG            reduce using rule 75 (LOGOP -> AND .)
    DATATYPE        reduce using rule 75 (LOGOP -> AND .)
    STR             reduce using rule 75 (LOGOP -> AND .)
    UPPERCASE       reduce using rule 75 (LOGOP -> AND .)
    DOUBLE          reduce using rule 75 (LOGOP -> AND .)
    INTEGER         reduce using rule 75 (LOGOP -> AND .)
    DECIMAL         reduce using rule 75 (LOGOP -> AND .)
    FLOAT           reduce using rule 75 (LOGOP -> AND .)
    STRING          reduce using rule 75 (LOGOP -> AND .)
    BOOLEAN         reduce using rule 75 (LOGOP -> AND .)
    DATETIME        reduce using rule 75 (LOGOP -> AND .)
    NONPOSINT       reduce using rule 75 (LOGOP -> AND .)
    NEGATIVEINT     reduce using rule 75 (LOGOP -> AND .)
    LONG            reduce using rule 75 (LOGOP -> AND .)
    INT             reduce using rule 75 (LOGOP -> AND .)
    SHORT           reduce using rule 75 (LOGOP -> AND .)
    BYTE            reduce using rule 75 (LOGOP -> AND .)
    NONNEGINT       reduce using rule 75 (LOGOP -> AND .)
    UNSIGNEDLONG    reduce using rule 75 (LOGOP -> AND .)
    UNSIGNEDINT     reduce using rule 75 (LOGOP -> AND .)
    UNSIGNEDSHORT   reduce using rule 75 (LOGOP -> AND .)
    UNSIGNEDBYTE    reduce using rule 75 (LOGOP -> AND .)
    POSITIVEINT     reduce using rule 75 (LOGOP -> AND .)
    UCASE           reduce using rule 75 (LOGOP -> AND .)
    LCASE           reduce using rule 75 (LOGOP -> AND .)
    PLUS            reduce using rule 75 (LOGOP -> AND .)
    MINUS           reduce using rule 75 (LOGOP -> AND .)


state 199

    (46) expression -> express_rel LOGOP . expression
    (46) expression -> . express_rel LOGOP expression
    (47) expression -> . express_rel
    (48) expression -> . LPAR expression RPAR
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 159
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 219
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 125
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135
    expression                     shift and go to state 220

state 200

    (51) express_rel -> LPAR express_rel RPAR .

    UNION           reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    POINT           reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    LKEY            reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    FILTER          reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    OPTIONAL        reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    VARIABLE        reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    ID              reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    URI             reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    RKEY            reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    RPAR            reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    AND             reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)
    OR              reduce using rule 51 (express_rel -> LPAR express_rel RPAR .)


state 201

    (76) LOGOP -> OR .

    LPAR            reduce using rule 76 (LOGOP -> OR .)
    NEG             reduce using rule 76 (LOGOP -> OR .)
    VARIABLE        reduce using rule 76 (LOGOP -> OR .)
    CONSTANT        reduce using rule 76 (LOGOP -> OR .)
    NUMBER          reduce using rule 76 (LOGOP -> OR .)
    REGEX           reduce using rule 76 (LOGOP -> OR .)
    ID              reduce using rule 76 (LOGOP -> OR .)
    URI             reduce using rule 76 (LOGOP -> OR .)
    SAMETERM        reduce using rule 76 (LOGOP -> OR .)
    LANGMATCHES     reduce using rule 76 (LOGOP -> OR .)
    CONTAINS        reduce using rule 76 (LOGOP -> OR .)
    BOUND           reduce using rule 76 (LOGOP -> OR .)
    ISIRI           reduce using rule 76 (LOGOP -> OR .)
    ISURI           reduce using rule 76 (LOGOP -> OR .)
    ISBLANK         reduce using rule 76 (LOGOP -> OR .)
    ISLITERAL       reduce using rule 76 (LOGOP -> OR .)
    LANG            reduce using rule 76 (LOGOP -> OR .)
    DATATYPE        reduce using rule 76 (LOGOP -> OR .)
    STR             reduce using rule 76 (LOGOP -> OR .)
    UPPERCASE       reduce using rule 76 (LOGOP -> OR .)
    DOUBLE          reduce using rule 76 (LOGOP -> OR .)
    INTEGER         reduce using rule 76 (LOGOP -> OR .)
    DECIMAL         reduce using rule 76 (LOGOP -> OR .)
    FLOAT           reduce using rule 76 (LOGOP -> OR .)
    STRING          reduce using rule 76 (LOGOP -> OR .)
    BOOLEAN         reduce using rule 76 (LOGOP -> OR .)
    DATETIME        reduce using rule 76 (LOGOP -> OR .)
    NONPOSINT       reduce using rule 76 (LOGOP -> OR .)
    NEGATIVEINT     reduce using rule 76 (LOGOP -> OR .)
    LONG            reduce using rule 76 (LOGOP -> OR .)
    INT             reduce using rule 76 (LOGOP -> OR .)
    SHORT           reduce using rule 76 (LOGOP -> OR .)
    BYTE            reduce using rule 76 (LOGOP -> OR .)
    NONNEGINT       reduce using rule 76 (LOGOP -> OR .)
    UNSIGNEDLONG    reduce using rule 76 (LOGOP -> OR .)
    UNSIGNEDINT     reduce using rule 76 (LOGOP -> OR .)
    UNSIGNEDSHORT   reduce using rule 76 (LOGOP -> OR .)
    UNSIGNEDBYTE    reduce using rule 76 (LOGOP -> OR .)
    POSITIVEINT     reduce using rule 76 (LOGOP -> OR .)
    UCASE           reduce using rule 76 (LOGOP -> OR .)
    LCASE           reduce using rule 76 (LOGOP -> OR .)
    PLUS            reduce using rule 76 (LOGOP -> OR .)
    MINUS           reduce using rule 76 (LOGOP -> OR .)


state 202

    (42) bgp -> FILTER LPAR expression RPAR .

    UNION           reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    POINT           reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    LKEY            reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    FILTER          reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    OPTIONAL        reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    VARIABLE        reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    ID              reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    URI             reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)
    RKEY            reduce using rule 42 (bgp -> FILTER LPAR expression RPAR .)


state 203

    (52) express_rel -> NEG LPAR expression . RPAR

    RPAR            shift and go to state 221


state 204

    (58) express_arg -> NUMBER POINT NUMBER .

    EQUALS          reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    LESS            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    LESSEQ          reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    GREATER         reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    GREATEREQ       reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    NEQUALS         reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    PLUS            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    MINUS           reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    TIMES           reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    DIV             reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    UNION           reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    POINT           reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    LKEY            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    FILTER          reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    OPTIONAL        reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    VARIABLE        reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    ID              reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    URI             reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    RKEY            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    RPAR            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    AND             reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    OR              reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)
    COMA            reduce using rule 58 (express_arg -> NUMBER POINT NUMBER .)


state 205

    (63) express_arg -> binary_func LPAR express_arg . COMA express_arg RPAR
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

    COMA            shift and go to state 222
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 206

    (51) express_rel -> LPAR . express_rel RPAR
    (67) express_arg -> LPAR . express_arg RPAR
    (49) express_rel -> . express_arg RELOP express_rel
    (50) express_rel -> . express_arg
    (51) express_rel -> . LPAR express_rel RPAR
    (52) express_rel -> . NEG LPAR expression RPAR
    (53) express_rel -> . NEG express_rel
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    LPAR            shift and go to state 206
    NEG             shift and go to state 120
    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    express_rel                    shift and go to state 223
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 160
    uri                            shift and go to state 134
    binary_func                    shift and go to state 124
    unary_func                     shift and go to state 135

state 207

    (68) express_arg -> express_arg RELOP express_arg .
    (49) express_rel -> express_arg . RELOP express_rel
    (50) express_rel -> express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV

  ! reduce/reduce conflict for UNION resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for POINT resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for LKEY resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for FILTER resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for OPTIONAL resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for ID resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for URI resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for RKEY resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for RPAR resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for AND resolved using rule 50 (express_rel -> express_arg .)
  ! reduce/reduce conflict for OR resolved using rule 50 (express_rel -> express_arg .)
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQ resolved as shift
  ! shift/reduce conflict for NEQUALS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    UNION           reduce using rule 50 (express_rel -> express_arg .)
    POINT           reduce using rule 50 (express_rel -> express_arg .)
    LKEY            reduce using rule 50 (express_rel -> express_arg .)
    FILTER          reduce using rule 50 (express_rel -> express_arg .)
    OPTIONAL        reduce using rule 50 (express_rel -> express_arg .)
    VARIABLE        reduce using rule 50 (express_rel -> express_arg .)
    ID              reduce using rule 50 (express_rel -> express_arg .)
    URI             reduce using rule 50 (express_rel -> express_arg .)
    RKEY            reduce using rule 50 (express_rel -> express_arg .)
    RPAR            reduce using rule 50 (express_rel -> express_arg .)
    AND             reduce using rule 50 (express_rel -> express_arg .)
    OR              reduce using rule 50 (express_rel -> express_arg .)
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175

  ! EQUALS          [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! LESS            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! LESSEQ          [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! GREATER         [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! GREATEREQ       [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! NEQUALS         [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! PLUS            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! MINUS           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! TIMES           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! DIV             [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! UNION           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! POINT           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! LKEY            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! FILTER          [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! OPTIONAL        [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! VARIABLE        [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! ID              [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! URI             [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! RKEY            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! RPAR            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! AND             [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! OR              [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]

    RELOP                          shift and go to state 167
    ARITOP                         shift and go to state 174

state 208

    (49) express_rel -> express_arg RELOP express_rel .

    UNION           reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    POINT           reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    LKEY            reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    FILTER          reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    OPTIONAL        reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    VARIABLE        reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    ID              reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    URI             reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    RKEY            reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    RPAR            reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    AND             reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)
    OR              reduce using rule 49 (express_rel -> express_arg RELOP express_rel .)


state 209

    (66) express_arg -> express_arg ARITOP express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQ resolved as shift
  ! shift/reduce conflict for NEQUALS resolved as shift
    UNION           reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    POINT           reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    LKEY            reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    FILTER          reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    OPTIONAL        reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    VARIABLE        reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    ID              reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    URI             reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    RKEY            reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    RPAR            reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    AND             reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    OR              reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    COMA            reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

  ! EQUALS          [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! LESS            [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! LESSEQ          [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! GREATER         [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! GREATEREQ       [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! NEQUALS         [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! PLUS            [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! MINUS           [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! TIMES           [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]
  ! DIV             [ reduce using rule 66 (express_arg -> express_arg ARITOP express_arg .) ]

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 210

    (59) express_arg -> REGEX LPAR express_arg . COMA pattern_arg regex_flag
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

    COMA            shift and go to state 224
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 211

    (6) uri -> ID COLON ID .
    (116) unary_func -> ID COLON ID .

  ! reduce/reduce conflict for LPAR resolved using rule 6 (uri -> ID COLON ID .)
    COMA            reduce using rule 6 (uri -> ID COLON ID .)
    PLUS            reduce using rule 6 (uri -> ID COLON ID .)
    MINUS           reduce using rule 6 (uri -> ID COLON ID .)
    TIMES           reduce using rule 6 (uri -> ID COLON ID .)
    DIV             reduce using rule 6 (uri -> ID COLON ID .)
    EQUALS          reduce using rule 6 (uri -> ID COLON ID .)
    LESS            reduce using rule 6 (uri -> ID COLON ID .)
    LESSEQ          reduce using rule 6 (uri -> ID COLON ID .)
    GREATER         reduce using rule 6 (uri -> ID COLON ID .)
    GREATEREQ       reduce using rule 6 (uri -> ID COLON ID .)
    NEQUALS         reduce using rule 6 (uri -> ID COLON ID .)
    LPAR            reduce using rule 6 (uri -> ID COLON ID .)
    RPAR            reduce using rule 6 (uri -> ID COLON ID .)
    AND             reduce using rule 6 (uri -> ID COLON ID .)
    OR              reduce using rule 6 (uri -> ID COLON ID .)
    UNION           reduce using rule 6 (uri -> ID COLON ID .)
    POINT           reduce using rule 6 (uri -> ID COLON ID .)
    LKEY            reduce using rule 6 (uri -> ID COLON ID .)
    FILTER          reduce using rule 6 (uri -> ID COLON ID .)
    OPTIONAL        reduce using rule 6 (uri -> ID COLON ID .)
    VARIABLE        reduce using rule 6 (uri -> ID COLON ID .)
    ID              reduce using rule 6 (uri -> ID COLON ID .)
    URI             reduce using rule 6 (uri -> ID COLON ID .)
    RKEY            reduce using rule 6 (uri -> ID COLON ID .)

  ! LPAR            [ reduce using rule 116 (unary_func -> ID COLON ID .) ]


state 212

    (67) express_arg -> LPAR express_arg . RPAR
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

    RPAR            shift and go to state 197
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 213

    (68) express_arg -> express_arg RELOP . express_arg
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 225
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 214

    (64) express_arg -> unary_func LPAR express_arg . RPAR
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

    RPAR            shift and go to state 226
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 215

    (33) rest_union_block -> UNION LKEY . join_block rest_union_block RKEY rest_union_block
    (39) bgp -> LKEY . bgp UNION bgp rest_union_block RKEY
    (45) bgp -> LKEY . join_block RKEY
    (34) join_block -> . LKEY union_block RKEY rest_join_block
    (35) join_block -> . bgp rest_join_block
    (39) bgp -> . LKEY bgp UNION bgp rest_union_block RKEY
    (40) bgp -> . bgp UNION bgp rest_union_block
    (41) bgp -> . triple
    (42) bgp -> . FILTER LPAR expression RPAR
    (43) bgp -> . FILTER express_rel
    (44) bgp -> . OPTIONAL LKEY group_graph_pattern RKEY
    (45) bgp -> . LKEY join_block RKEY
    (122) triple -> . subject predicate object
    (126) subject -> . uri
    (127) subject -> . VARIABLE
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI

    LKEY            shift and go to state 191
    FILTER          shift and go to state 93
    OPTIONAL        shift and go to state 86
    VARIABLE        shift and go to state 91
    ID              shift and go to state 8
    URI             shift and go to state 7

    join_block                     shift and go to state 227
    uri                            shift and go to state 92
    bgp                            shift and go to state 117
    triple                         shift and go to state 82
    subject                        shift and go to state 83

state 216

    (33) rest_union_block -> UNION LKEY join_block rest_union_block . RKEY rest_union_block

    RKEY            shift and go to state 228


state 217

    (39) bgp -> LKEY bgp UNION bgp rest_union_block . RKEY
    (40) bgp -> bgp UNION bgp rest_union_block .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 229
    UNION           reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    POINT           reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    LKEY            reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    FILTER          reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    OPTIONAL        reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    VARIABLE        reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    ID              reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)
    URI             reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .)

  ! RKEY            [ reduce using rule 40 (bgp -> bgp UNION bgp rest_union_block .) ]


state 218

    (48) expression -> LPAR expression RPAR .

    RPAR            reduce using rule 48 (expression -> LPAR expression RPAR .)


state 219

    (46) expression -> express_rel . LOGOP expression
    (47) expression -> express_rel .
    (75) LOGOP -> . AND
    (76) LOGOP -> . OR

    RPAR            reduce using rule 47 (expression -> express_rel .)
    AND             shift and go to state 198
    OR              shift and go to state 201

    LOGOP                          shift and go to state 199

state 220

    (46) expression -> express_rel LOGOP expression .

    RPAR            reduce using rule 46 (expression -> express_rel LOGOP expression .)


state 221

    (52) express_rel -> NEG LPAR expression RPAR .

    UNION           reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    POINT           reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    LKEY            reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    FILTER          reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    OPTIONAL        reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    VARIABLE        reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    ID              reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    URI             reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    RKEY            reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    RPAR            reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    AND             reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)
    OR              reduce using rule 52 (express_rel -> NEG LPAR expression RPAR .)


state 222

    (63) express_arg -> binary_func LPAR express_arg COMA . express_arg RPAR
    (54) express_arg -> . uri
    (55) express_arg -> . VARIABLE
    (56) express_arg -> . CONSTANT
    (57) express_arg -> . NUMBER
    (58) express_arg -> . NUMBER POINT NUMBER
    (59) express_arg -> . REGEX LPAR express_arg COMA pattern_arg regex_flag
    (63) express_arg -> . binary_func LPAR express_arg COMA express_arg RPAR
    (64) express_arg -> . unary_func LPAR express_arg RPAR
    (65) express_arg -> . UNARYOP express_arg
    (66) express_arg -> . express_arg ARITOP express_arg
    (67) express_arg -> . LPAR express_arg RPAR
    (68) express_arg -> . express_arg RELOP express_arg
    (6) uri -> . ID COLON ID
    (7) uri -> . ID COLON URI
    (8) uri -> . URI
    (83) binary_func -> . REGEX
    (84) binary_func -> . SAMETERM
    (85) binary_func -> . LANGMATCHES
    (86) binary_func -> . CONSTANT
    (87) binary_func -> . CONTAINS
    (88) unary_func -> . BOUND
    (89) unary_func -> . ISIRI
    (90) unary_func -> . ISURI
    (91) unary_func -> . ISBLANK
    (92) unary_func -> . ISLITERAL
    (93) unary_func -> . LANG
    (94) unary_func -> . DATATYPE
    (95) unary_func -> . STR
    (96) unary_func -> . UPPERCASE
    (97) unary_func -> . DOUBLE
    (98) unary_func -> . INTEGER
    (99) unary_func -> . DECIMAL
    (100) unary_func -> . FLOAT
    (101) unary_func -> . STRING
    (102) unary_func -> . BOOLEAN
    (103) unary_func -> . DATETIME
    (104) unary_func -> . NONPOSINT
    (105) unary_func -> . NEGATIVEINT
    (106) unary_func -> . LONG
    (107) unary_func -> . INT
    (108) unary_func -> . SHORT
    (109) unary_func -> . BYTE
    (110) unary_func -> . NONNEGINT
    (111) unary_func -> . UNSIGNEDLONG
    (112) unary_func -> . UNSIGNEDINT
    (113) unary_func -> . UNSIGNEDSHORT
    (114) unary_func -> . UNSIGNEDBYTE
    (115) unary_func -> . POSITIVEINT
    (116) unary_func -> . ID COLON ID
    (117) unary_func -> . uri
    (118) unary_func -> . UCASE
    (119) unary_func -> . LCASE
    (73) UNARYOP -> . PLUS
    (74) UNARYOP -> . MINUS

    VARIABLE        shift and go to state 122
    CONSTANT        shift and go to state 119
    NUMBER          shift and go to state 121
    REGEX           shift and go to state 129
    LPAR            shift and go to state 181
    ID              shift and go to state 130
    URI             shift and go to state 7
    SAMETERM        shift and go to state 126
    LANGMATCHES     shift and go to state 128
    CONTAINS        shift and go to state 133
    BOUND           shift and go to state 69
    ISIRI           shift and go to state 70
    ISURI           shift and go to state 40
    ISBLANK         shift and go to state 49
    ISLITERAL       shift and go to state 51
    LANG            shift and go to state 41
    DATATYPE        shift and go to state 44
    STR             shift and go to state 56
    UPPERCASE       shift and go to state 45
    DOUBLE          shift and go to state 67
    INTEGER         shift and go to state 52
    DECIMAL         shift and go to state 54
    FLOAT           shift and go to state 68
    STRING          shift and go to state 53
    BOOLEAN         shift and go to state 71
    DATETIME        shift and go to state 55
    NONPOSINT       shift and go to state 73
    NEGATIVEINT     shift and go to state 38
    LONG            shift and go to state 48
    INT             shift and go to state 66
    SHORT           shift and go to state 39
    BYTE            shift and go to state 58
    NONNEGINT       shift and go to state 62
    UNSIGNEDLONG    shift and go to state 74
    UNSIGNEDINT     shift and go to state 46
    UNSIGNEDSHORT   shift and go to state 42
    UNSIGNEDBYTE    shift and go to state 43
    POSITIVEINT     shift and go to state 59
    UCASE           shift and go to state 63
    LCASE           shift and go to state 47
    PLUS            shift and go to state 127
    MINUS           shift and go to state 123

    binary_func                    shift and go to state 124
    UNARYOP                        shift and go to state 132
    express_arg                    shift and go to state 230
    uri                            shift and go to state 134
    unary_func                     shift and go to state 135

state 223

    (51) express_rel -> LPAR express_rel . RPAR

    RPAR            shift and go to state 200


state 224

    (59) express_arg -> REGEX LPAR express_arg COMA . pattern_arg regex_flag
    (62) pattern_arg -> . CONSTANT

    CONSTANT        shift and go to state 231

    pattern_arg                    shift and go to state 232

state 225

    (68) express_arg -> express_arg RELOP express_arg .
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESSEQ resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATEREQ resolved as shift
  ! shift/reduce conflict for NEQUALS resolved as shift
    RPAR            reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    UNION           reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    POINT           reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    LKEY            reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    FILTER          reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    OPTIONAL        reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    VARIABLE        reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    ID              reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    URI             reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    RKEY            reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    AND             reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    OR              reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    COMA            reduce using rule 68 (express_arg -> express_arg RELOP express_arg .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

  ! PLUS            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! MINUS           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! TIMES           [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! DIV             [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! EQUALS          [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! LESS            [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! LESSEQ          [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! GREATER         [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! GREATEREQ       [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]
  ! NEQUALS         [ reduce using rule 68 (express_arg -> express_arg RELOP express_arg .) ]

    RELOP                          shift and go to state 213
    ARITOP                         shift and go to state 174

state 226

    (64) express_arg -> unary_func LPAR express_arg RPAR .

    EQUALS          reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    LESS            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    LESSEQ          reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    GREATER         reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    GREATEREQ       reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    NEQUALS         reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    PLUS            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    MINUS           reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    TIMES           reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    DIV             reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    UNION           reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    POINT           reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    LKEY            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    FILTER          reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    OPTIONAL        reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    VARIABLE        reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    ID              reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    URI             reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    RKEY            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    RPAR            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    AND             reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    OR              reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)
    COMA            reduce using rule 64 (express_arg -> unary_func LPAR express_arg RPAR .)


state 227

    (33) rest_union_block -> UNION LKEY join_block . rest_union_block RKEY rest_union_block
    (45) bgp -> LKEY join_block . RKEY
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

  ! shift/reduce conflict for RKEY resolved as shift
    RKEY            shift and go to state 185
    UNION           shift and go to state 111

  ! RKEY            [ reduce using rule 4 (empty -> .) ]

    rest_union_block               shift and go to state 216
    empty                          shift and go to state 113

state 228

    (33) rest_union_block -> UNION LKEY join_block rest_union_block RKEY . rest_union_block
    (32) rest_union_block -> . empty
    (33) rest_union_block -> . UNION LKEY join_block rest_union_block RKEY rest_union_block
    (4) empty -> .

  ! shift/reduce conflict for UNION resolved as shift
    UNION           shift and go to state 111
    POINT           reduce using rule 4 (empty -> .)
    LKEY            reduce using rule 4 (empty -> .)
    FILTER          reduce using rule 4 (empty -> .)
    OPTIONAL        reduce using rule 4 (empty -> .)
    VARIABLE        reduce using rule 4 (empty -> .)
    ID              reduce using rule 4 (empty -> .)
    URI             reduce using rule 4 (empty -> .)
    RKEY            reduce using rule 4 (empty -> .)

  ! UNION           [ reduce using rule 4 (empty -> .) ]

    rest_union_block               shift and go to state 233
    empty                          shift and go to state 113

state 229

    (39) bgp -> LKEY bgp UNION bgp rest_union_block RKEY .

    UNION           reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    POINT           reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    LKEY            reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    FILTER          reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    OPTIONAL        reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    VARIABLE        reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    ID              reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    URI             reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)
    RKEY            reduce using rule 39 (bgp -> LKEY bgp UNION bgp rest_union_block RKEY .)


state 230

    (63) express_arg -> binary_func LPAR express_arg COMA express_arg . RPAR
    (66) express_arg -> express_arg . ARITOP express_arg
    (68) express_arg -> express_arg . RELOP express_arg
    (69) ARITOP -> . PLUS
    (70) ARITOP -> . MINUS
    (71) ARITOP -> . TIMES
    (72) ARITOP -> . DIV
    (77) RELOP -> . EQUALS
    (78) RELOP -> . LESS
    (79) RELOP -> . LESSEQ
    (80) RELOP -> . GREATER
    (81) RELOP -> . GREATEREQ
    (82) RELOP -> . NEQUALS

    RPAR            shift and go to state 234
    PLUS            shift and go to state 173
    MINUS           shift and go to state 170
    TIMES           shift and go to state 176
    DIV             shift and go to state 175
    EQUALS          shift and go to state 169
    LESS            shift and go to state 168
    LESSEQ          shift and go to state 172
    GREATER         shift and go to state 178
    GREATEREQ       shift and go to state 171
    NEQUALS         shift and go to state 177

    ARITOP                         shift and go to state 174
    RELOP                          shift and go to state 213

state 231

    (62) pattern_arg -> CONSTANT .

    RPAR            reduce using rule 62 (pattern_arg -> CONSTANT .)
    COMA            reduce using rule 62 (pattern_arg -> CONSTANT .)


state 232

    (59) express_arg -> REGEX LPAR express_arg COMA pattern_arg . regex_flag
    (60) regex_flag -> . RPAR
    (61) regex_flag -> . COMA pattern_arg RPAR

    RPAR            shift and go to state 236
    COMA            shift and go to state 237

    regex_flag                     shift and go to state 235

state 233

    (33) rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .

    RKEY            reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    POINT           reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    LKEY            reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    FILTER          reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    OPTIONAL        reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    VARIABLE        reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    ID              reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    URI             reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)
    UNION           reduce using rule 33 (rest_union_block -> UNION LKEY join_block rest_union_block RKEY rest_union_block .)


state 234

    (63) express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .

    EQUALS          reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    LESS            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    LESSEQ          reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    GREATER         reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    GREATEREQ       reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    NEQUALS         reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    PLUS            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    MINUS           reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    TIMES           reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    DIV             reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    UNION           reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    POINT           reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    LKEY            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    FILTER          reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    OPTIONAL        reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    VARIABLE        reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    ID              reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    URI             reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    RKEY            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    RPAR            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    AND             reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    OR              reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)
    COMA            reduce using rule 63 (express_arg -> binary_func LPAR express_arg COMA express_arg RPAR .)


state 235

    (59) express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .

    EQUALS          reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    LESS            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    LESSEQ          reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    GREATER         reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    GREATEREQ       reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    NEQUALS         reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    PLUS            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    MINUS           reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    TIMES           reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    DIV             reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    UNION           reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    POINT           reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    LKEY            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    FILTER          reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    OPTIONAL        reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    VARIABLE        reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    ID              reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    URI             reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    RKEY            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    RPAR            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    AND             reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    OR              reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)
    COMA            reduce using rule 59 (express_arg -> REGEX LPAR express_arg COMA pattern_arg regex_flag .)


state 236

    (60) regex_flag -> RPAR .

    EQUALS          reduce using rule 60 (regex_flag -> RPAR .)
    LESS            reduce using rule 60 (regex_flag -> RPAR .)
    LESSEQ          reduce using rule 60 (regex_flag -> RPAR .)
    GREATER         reduce using rule 60 (regex_flag -> RPAR .)
    GREATEREQ       reduce using rule 60 (regex_flag -> RPAR .)
    NEQUALS         reduce using rule 60 (regex_flag -> RPAR .)
    PLUS            reduce using rule 60 (regex_flag -> RPAR .)
    MINUS           reduce using rule 60 (regex_flag -> RPAR .)
    TIMES           reduce using rule 60 (regex_flag -> RPAR .)
    DIV             reduce using rule 60 (regex_flag -> RPAR .)
    UNION           reduce using rule 60 (regex_flag -> RPAR .)
    POINT           reduce using rule 60 (regex_flag -> RPAR .)
    LKEY            reduce using rule 60 (regex_flag -> RPAR .)
    FILTER          reduce using rule 60 (regex_flag -> RPAR .)
    OPTIONAL        reduce using rule 60 (regex_flag -> RPAR .)
    VARIABLE        reduce using rule 60 (regex_flag -> RPAR .)
    ID              reduce using rule 60 (regex_flag -> RPAR .)
    URI             reduce using rule 60 (regex_flag -> RPAR .)
    RKEY            reduce using rule 60 (regex_flag -> RPAR .)
    RPAR            reduce using rule 60 (regex_flag -> RPAR .)
    AND             reduce using rule 60 (regex_flag -> RPAR .)
    OR              reduce using rule 60 (regex_flag -> RPAR .)
    COMA            reduce using rule 60 (regex_flag -> RPAR .)


state 237

    (61) regex_flag -> COMA . pattern_arg RPAR
    (62) pattern_arg -> . CONSTANT

    CONSTANT        shift and go to state 231

    pattern_arg                    shift and go to state 238

state 238

    (61) regex_flag -> COMA pattern_arg . RPAR

    RPAR            shift and go to state 239


state 239

    (61) regex_flag -> COMA pattern_arg RPAR .

    EQUALS          reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    LESS            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    LESSEQ          reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    GREATER         reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    GREATEREQ       reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    NEQUALS         reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    PLUS            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    MINUS           reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    TIMES           reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    DIV             reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    UNION           reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    POINT           reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    LKEY            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    FILTER          reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    OPTIONAL        reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    VARIABLE        reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    ID              reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    URI             reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    RKEY            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    RPAR            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    AND             reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    OR              reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)
    COMA            reduce using rule 61 (regex_flag -> COMA pattern_arg RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LKEY in state 75 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 75 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 75 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 75 resolved as shift
WARNING: shift/reduce conflict for URI in state 75 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 76 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 76 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 76 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 76 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for URI in state 76 resolved as shift
WARNING: shift/reduce conflict for UNION in state 84 resolved as shift
WARNING: shift/reduce conflict for POINT in state 84 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 84 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 84 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 84 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for URI in state 84 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 90 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 90 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 90 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for URI in state 90 resolved as shift
WARNING: shift/reduce conflict for UNION in state 103 resolved as shift
WARNING: shift/reduce conflict for POINT in state 103 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 103 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 103 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 103 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 103 resolved as shift
WARNING: shift/reduce conflict for ID in state 103 resolved as shift
WARNING: shift/reduce conflict for URI in state 103 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 109 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 109 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 109 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 109 resolved as shift
WARNING: shift/reduce conflict for ID in state 109 resolved as shift
WARNING: shift/reduce conflict for URI in state 109 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 115 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 116 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 116 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 116 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 116 resolved as shift
WARNING: shift/reduce conflict for ID in state 116 resolved as shift
WARNING: shift/reduce conflict for URI in state 116 resolved as shift
WARNING: shift/reduce conflict for UNION in state 117 resolved as shift
WARNING: shift/reduce conflict for POINT in state 117 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 117 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 117 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 117 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 117 resolved as shift
WARNING: shift/reduce conflict for ID in state 117 resolved as shift
WARNING: shift/reduce conflict for URI in state 117 resolved as shift
WARNING: shift/reduce conflict for POINT in state 121 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 129 resolved as shift
WARNING: shift/reduce conflict for UNION in state 145 resolved as shift
WARNING: shift/reduce conflict for POINT in state 145 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 145 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 145 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 145 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 145 resolved as shift
WARNING: shift/reduce conflict for ID in state 145 resolved as shift
WARNING: shift/reduce conflict for URI in state 145 resolved as shift
WARNING: shift/reduce conflict for UNION in state 146 resolved as shift
WARNING: shift/reduce conflict for POINT in state 146 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 146 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 146 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 146 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 146 resolved as shift
WARNING: shift/reduce conflict for ID in state 146 resolved as shift
WARNING: shift/reduce conflict for URI in state 146 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 148 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 148 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 148 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 148 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for URI in state 148 resolved as shift
WARNING: shift/reduce conflict for UNION in state 149 resolved as shift
WARNING: shift/reduce conflict for POINT in state 154 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 154 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 154 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 154 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 154 resolved as shift
WARNING: shift/reduce conflict for ID in state 154 resolved as shift
WARNING: shift/reduce conflict for URI in state 154 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 156 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 157 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 157 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 157 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 157 resolved as shift
WARNING: shift/reduce conflict for ID in state 157 resolved as shift
WARNING: shift/reduce conflict for URI in state 157 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 160 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 182 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 182 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 182 resolved as shift
WARNING: shift/reduce conflict for DIV in state 182 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 182 resolved as shift
WARNING: shift/reduce conflict for LESS in state 182 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 182 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 182 resolved as shift
WARNING: shift/reduce conflict for GREATEREQ in state 182 resolved as shift
WARNING: shift/reduce conflict for NEQUALS in state 182 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 186 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 191 resolved as shift
WARNING: shift/reduce conflict for FILTER in state 191 resolved as shift
WARNING: shift/reduce conflict for OPTIONAL in state 191 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 191 resolved as shift
WARNING: shift/reduce conflict for ID in state 191 resolved as shift
WARNING: shift/reduce conflict for URI in state 191 resolved as shift
WARNING: shift/reduce conflict for UNION in state 195 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 207 resolved as shift
WARNING: shift/reduce conflict for LESS in state 207 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 207 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 207 resolved as shift
WARNING: shift/reduce conflict for GREATEREQ in state 207 resolved as shift
WARNING: shift/reduce conflict for NEQUALS in state 207 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 207 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 207 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 207 resolved as shift
WARNING: shift/reduce conflict for DIV in state 207 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 209 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 209 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 209 resolved as shift
WARNING: shift/reduce conflict for DIV in state 209 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 209 resolved as shift
WARNING: shift/reduce conflict for LESS in state 209 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 209 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 209 resolved as shift
WARNING: shift/reduce conflict for GREATEREQ in state 209 resolved as shift
WARNING: shift/reduce conflict for NEQUALS in state 209 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 217 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 225 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 225 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 225 resolved as shift
WARNING: shift/reduce conflict for DIV in state 225 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 225 resolved as shift
WARNING: shift/reduce conflict for LESS in state 225 resolved as shift
WARNING: shift/reduce conflict for LESSEQ in state 225 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 225 resolved as shift
WARNING: shift/reduce conflict for GREATEREQ in state 225 resolved as shift
WARNING: shift/reduce conflict for NEQUALS in state 225 resolved as shift
WARNING: shift/reduce conflict for RKEY in state 227 resolved as shift
WARNING: shift/reduce conflict for UNION in state 228 resolved as shift
WARNING: reduce/reduce conflict in state 96 resolved using rule (uri -> ID COLON ID)
WARNING: rejected rule (unary_func -> ID COLON ID) in state 96
WARNING: reduce/reduce conflict in state 112 resolved using rule (empty -> <empty>)
WARNING: rejected rule (union_block -> pjoin_block rest_union_block) in state 112
WARNING: reduce/reduce conflict in state 155 resolved using rule (pjoin_block -> LKEY join_block RKEY)
WARNING: rejected rule (bgp -> LKEY join_block RKEY) in state 155
WARNING: reduce/reduce conflict in state 194 resolved using rule (pjoin_block -> LKEY join_block RKEY)
WARNING: rejected rule (bgp -> LKEY join_block RKEY) in state 194
WARNING: reduce/reduce conflict in state 207 resolved using rule (express_rel -> express_arg)
WARNING: rejected rule (express_arg -> express_arg RELOP express_arg) in state 207
WARNING: reduce/reduce conflict in state 211 resolved using rule (uri -> ID COLON ID)
WARNING: rejected rule (unary_func -> ID COLON ID) in state 211
WARNING: Rule (unary_func -> ID COLON ID) is never reduced
WARNING: Rule (union_block -> pjoin_block rest_union_block) is never reduced
